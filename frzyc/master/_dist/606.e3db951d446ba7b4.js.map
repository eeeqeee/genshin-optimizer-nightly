{"version":3,"file":"606.e3db951d446ba7b4.js","mappings":"kQAMe,SAASA,IACtB,MAAM,IAAQC,EAAAA,EAAAA,MACd,OACE,QAACC,EAAA,EAAS,YACR,QAACC,EAAA,EAAW,CAACC,GAAI,CAAEC,GAAI,GAAI,UACxBC,EAAE,wCAAyC,KAC5C,QAACC,EAAA,EAAO,CAACC,MAAM,UAAS,SAAEF,EAAE,8BAE9B,QAACG,EAAA,EAAO,KACR,QAACN,EAAA,EAAW,WACV,QAACO,EAAgB,QAIzB,CAEA,MAAMC,EAAkB,CACtBC,IAAK,OACLC,IAAK,OACLC,GAAI,UACJC,GAAI,UACJC,GAAI,UACJC,GAAI,WACJC,GAAI,mBACJC,GAAI,WACJC,GAAI,MACJC,GAAI,MACJC,GAAI,YACJC,GAAI,eACJC,GAAI,UACJC,GAAI,SACJC,GAAI,cAEC,SAAShB,IACd,MAAM,EAAG,KAAEiB,IAAS1B,EAAAA,EAAAA,IAAe,CAAC,KAAM,aACpC2B,EAAiBC,GAAS,IAAMF,EAAKG,eAAeD,GACpDE,EAAcJ,EAAKK,UAAU,GACnC,OACE,QAACC,EAAA,EAAc,CACbC,WAAS,EACTC,MAAO7B,EAAE,uCAAwC,CAC/C8B,SAAU9B,EAAG,aAAYyB,OACxB,SAEFM,EAAAA,EAAiBC,KAAKT,IACrB,QAACU,EAAA,EAAQ,CAEPC,SAAUT,IAAgBF,EAC1BY,SAAUV,IAAgBF,EAC1Ba,QAASd,EAAcC,GAAM,WAE7B,QAAC,KAAK,CAACc,QAAU,aAAYd,MAC5BA,IAASE,EAAe,KAAIpB,EAAgBkB,MAAW,KANnDA,MAWf,C,qCC5DA,SAAe,EAAAe,EAAA,IAA4B,SAAK,OAAQ,CACtDC,EAAG,8bACD,SCHJ,GAAe,EAAAD,EAAA,IAA4B,SAAK,OAAQ,CACtDC,EAAG,2ZACD,W,6GCaW,SAASC,IACtB,MAAM,MAAEC,EAAK,SAAEC,IAAaC,EAAAA,EAAAA,YAAWC,EAAAA,IACjC,EAAE5C,IAAML,EAAAA,EAAAA,IAAe,CAAC,KAAM,aACpC,OACE,QAACC,EAAA,EAAS,YACR,QAACC,EAAA,EAAW,CAACC,GAAI,CAAE+C,QAAS,OAAQC,WAAY,SAAUC,IAAK,GAAI,WACjE,QAACC,EAAA,EAAM,CAACC,IAAKC,KACb,QAACC,EAAA,EAAU,CAACC,QAAQ,KAAI,UAAC,IAAEpD,EAAC,OAAC,0BAE/B,QAACG,EAAA,EAAO,KACR,QAACN,EAAA,EAAW,YACV,QAACsD,EAAA,EAAU,WACT,QAAC,KAAK,CAACnD,EAAGA,EAAGqC,QAAQ,0BAAyB,UAAC,OAC1C,sBAAG,UAAS,8DACV,2BAAQ,iBAAqB,oDAItC,QAACgB,EAAA,EAAG,CAACR,QAAQ,OAAOE,IAAK,EAAG/B,GAAI,EAAE,WAChC,QAACsC,EAAA,EAAM,CACLlB,QAAS,IAAMM,GAAUD,GACzBc,UAAWd,GAAQ,QAACe,EAAA,EAAY,KAAM,QAACC,EAAA,EAAwB,IAC/DvD,MAAOuC,EAAQ,UAAY,YAAY,SAGnCzC,EADHyC,EACI,OAAC,qCACD,OAAC,0CAER,QAACa,EAAA,EAAM,CACLC,WAAW,QAAC,KAAW,IACvBrD,MAAM,UACNwD,KAAK,yCACLC,OAAO,SAAQ,SAChB,aAGD,QAACL,EAAA,EAAM,CACLC,WAAW,QAACK,EAAS,IACrBF,KAAK,0DACLC,OAAO,SAAQ,SAChB,eAGD,QAACL,EAAA,EAAM,CACLC,WAAW,QAACM,EAAW,IACvBH,KAAK,wEACLC,OAAO,SAAQ,SAChB,wBAOX,CC/De,SAASG,IACtB,MAAM,IAAQnE,EAAAA,EAAAA,IAAe,CAAC,aAG9B,OAFAoE,EAAAA,GAAQC,KAAK,CAAEC,QAAS,WAAYC,KAAM,cAGxC,QAACC,EAAA,EAAQ,CAACrE,GAAI,CAAEsE,GAAI,GAAI,WACtB,QAACvE,EAAA,EAAW,CAACC,GAAI,CAAEC,GAAI,GAAI,UACzB,QAACoD,EAAA,EAAU,CAACC,QAAQ,YAAW,UAC7B,QAAC,KAAK,CAACpD,EAAMqC,QAAQ,eAGzB,QAAClC,EAAA,EAAO,KACR,QAACN,EAAA,EAAW,CAACC,GAAI,CAAE+C,QAAS,OAAQwB,cAAe,SAAUtB,IAAK,GAAI,WACpE,QAACrD,EAAY,KACb,QAAC8C,EAAS,KACV,QAAC8B,EAAA,EAAY,SAIrB,C","sources":["webpack:///./src/app/PageSettings/LanguageCard.tsx","webpack:///../../node_modules/@mui/icons-material/esm/Apple.js","webpack:///../../node_modules/@mui/icons-material/esm/Android.js","webpack:///./src/app/PageSettings/SillyCard.tsx","webpack:///./src/app/PageSettings/index.tsx"],"sourcesContent":["import { CardContent, Divider, MenuItem } from '@mui/material'\nimport { Trans, useTranslation } from 'react-i18next'\nimport CardLight from '../Components/Card/CardLight'\nimport DropdownButton from '../Components/DropdownMenu/DropdownButton'\nimport SqBadge from '../Components/SqBadge'\nimport { languageCodeList } from '../i18n'\nexport default function LanguageCard() {\n  const { t } = useTranslation()\n  return (\n    <CardLight>\n      <CardContent sx={{ py: 1 }}>\n        {t('settings:languageCard.selectLanguage')}{' '}\n        <SqBadge color=\"warning\">{t('ui:underConstruction')}</SqBadge>\n      </CardContent>\n      <Divider />\n      <CardContent>\n        <LanguageDropdown />\n      </CardContent>\n    </CardLight>\n  )\n}\n\nconst nativeLanguages = {\n  chs: '简体中文',\n  cht: '繁體中文',\n  de: 'Deutsch',\n  en: 'English',\n  es: 'Español',\n  fr: 'Français',\n  id: 'Bahasa Indonesia',\n  it: 'Italiano',\n  ja: '日本語',\n  ko: '한국어',\n  pt: 'Português',\n  ru: 'Русский язык',\n  th: 'ภาษาไทย',\n  tr: 'Türkçe',\n  vi: 'Tiếng Việt',\n}\nexport function LanguageDropdown() {\n  const { t, i18n } = useTranslation(['ui', 'settings'])\n  const onSetLanguage = (lang) => () => i18n.changeLanguage(lang)\n  const currentLang = i18n.languages[0]\n  return (\n    <DropdownButton\n      fullWidth\n      title={t('settings:languageCard.languageFormat', {\n        language: t(`languages:${currentLang}`),\n      })}\n    >\n      {languageCodeList.map((lang) => (\n        <MenuItem\n          key={lang}\n          selected={currentLang === lang}\n          disabled={currentLang === lang}\n          onClick={onSetLanguage(lang)}\n        >\n          <Trans i18nKey={`languages:${lang}`} />\n          {lang !== currentLang ? ` (${nativeLanguages[lang]})` : ''}\n        </MenuItem>\n      ))}\n    </DropdownButton>\n  )\n}\n","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M18.71 19.5c-.83 1.24-1.71 2.45-3.05 2.47-1.34.03-1.77-.79-3.29-.79-1.53 0-2 .77-3.27.82-1.31.05-2.3-1.32-3.14-2.53C4.25 17 2.94 12.45 4.7 9.39c.87-1.52 2.43-2.48 4.12-2.51 1.28-.02 2.5.87 3.29.87.78 0 2.26-1.07 3.81-.91.65.03 2.47.26 3.64 1.98-.09.06-2.17 1.28-2.15 3.81.03 3.02 2.65 4.03 2.68 4.04-.03.07-.42 1.44-1.38 2.83M13 3.5c.73-.83 1.94-1.46 2.94-1.5.13 1.17-.34 2.35-1.04 3.19-.69.85-1.83 1.51-2.95 1.42-.15-1.15.41-2.35 1.05-3.11z\"\n}), 'Apple');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m17.6 9.48 1.84-3.18c.16-.31.04-.69-.26-.85-.29-.15-.65-.06-.83.22l-1.88 3.24c-2.86-1.21-6.08-1.21-8.94 0L5.65 5.67c-.19-.29-.58-.38-.87-.2-.28.18-.37.54-.22.83L6.4 9.48C3.3 11.25 1.28 14.44 1 18h22c-.28-3.56-2.3-6.75-5.4-8.52zM7 15.25c-.69 0-1.25-.56-1.25-1.25s.56-1.25 1.25-1.25 1.25.56 1.25 1.25-.56 1.25-1.25 1.25zm10 0c-.69 0-1.25-.56-1.25-1.25s.56-1.25 1.25-1.25 1.25.56 1.25 1.25-.56 1.25-1.25 1.25z\"\n}), 'Android');","import { Android as AndroidIcon, Apple as AppleIcon } from '@mui/icons-material'\nimport {\n  Avatar,\n  Box,\n  Button,\n  CardContent,\n  Divider,\n  Typography,\n} from '@mui/material'\nimport { useContext } from 'react'\nimport CardLight from '../Components/Card/CardLight'\nimport { SillyContext } from '../Context/SillyContext'\nimport silly_icon from '../silly_icon.png'\nimport { DiscordIcon } from '@genshin-optimizer/svgicons'\nimport CheckBoxIcon from '@mui/icons-material/CheckBox'\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank'\nimport { Trans, useTranslation } from 'react-i18next'\nexport default function SillyCard() {\n  const { silly, setSilly } = useContext(SillyContext)\n  const { t } = useTranslation(['ui', 'settings'])\n  return (\n    <CardLight>\n      <CardContent sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n        <Avatar src={silly_icon} />\n        <Typography variant=\"h5\"> {t`sillyPageTitle`}</Typography>\n      </CardContent>\n      <Divider />\n      <CardContent>\n        <Typography>\n          <Trans t={t} i18nKey=\"settings:sillyCard.desc\">\n            We <s>stole</s> borrowed (with permission) all the character assets\n            from <strong>Silly Wisher</strong> and gene splice it into Genshin\n            Optimizer.\n          </Trans>\n        </Typography>\n        <Box display=\"flex\" gap={2} pt={2}>\n          <Button\n            onClick={() => setSilly(!silly)}\n            startIcon={silly ? <CheckBoxIcon /> : <CheckBoxOutlineBlankIcon />}\n            color={silly ? 'success' : 'secondary'}\n          >\n            {silly\n              ? t`settings:sillyCard.toggle.enabled`\n              : t`settings:sillyCard.toggle.disabled`}\n          </Button>\n          <Button\n            startIcon={<DiscordIcon />}\n            color=\"discord\"\n            href=\"https://discord.com/invite/sillywisher\"\n            target=\"_blank\"\n          >\n            Discord\n          </Button>\n          <Button\n            startIcon={<AppleIcon />}\n            href=\"https://apps.apple.com/lv/app/silly-wisher/id6444465724\"\n            target=\"_blank\"\n          >\n            App Store\n          </Button>\n          <Button\n            startIcon={<AndroidIcon />}\n            href=\"https://play.google.com/store/apps/details?id=com.sketchi.sillywisher\"\n            target=\"_blank\"\n          >\n            Google Play\n          </Button>\n        </Box>\n      </CardContent>\n    </CardLight>\n  )\n}\n","import { CardContent, Divider, Typography } from '@mui/material'\nimport ReactGA from 'react-ga4'\nimport { Trans, useTranslation } from 'react-i18next'\nimport CardDark from '../Components/Card/CardDark'\nimport DatabaseCard from './DatabaseCard'\nimport LanguageCard from './LanguageCard'\nimport SillyCard from './SillyCard'\n\nexport default function PageSettings() {\n  const { t } = useTranslation(['settings'])\n  ReactGA.send({ hitType: 'pageview', page: '/setting' })\n\n  return (\n    <CardDark sx={{ my: 1 }}>\n      <CardContent sx={{ py: 1 }}>\n        <Typography variant=\"subtitle1\">\n          <Trans t={t} i18nKey=\"title\" />\n        </Typography>\n      </CardContent>\n      <Divider />\n      <CardContent sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n        <LanguageCard />\n        <SillyCard />\n        <DatabaseCard />\n      </CardContent>\n    </CardDark>\n  )\n}\n"],"names":["LanguageCard","useTranslation","CardLight","CardContent","sx","py","t","SqBadge","color","Divider","LanguageDropdown","nativeLanguages","chs","cht","de","en","es","fr","id","it","ja","ko","pt","ru","th","tr","vi","i18n","onSetLanguage","lang","changeLanguage","currentLang","languages","DropdownButton","fullWidth","title","language","languageCodeList","map","MenuItem","selected","disabled","onClick","i18nKey","createSvgIcon","d","SillyCard","silly","setSilly","useContext","SillyContext","display","alignItems","gap","Avatar","src","silly_icon","Typography","variant","Box","Button","startIcon","CheckBox","CheckBoxOutlineBlank","href","target","Apple","Android","PageSettings","ReactGA","send","hitType","page","CardDark","my","flexDirection","DatabaseCard"],"sourceRoot":""}