{"version":3,"file":"169.e067e9a43c96bdd4.js","mappings":"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","sources":["webpack:///./src/app/Components/Artifact/ArtifactCardPico.tsx","webpack:///./src/app/Components/Artifact/ArtifactTooltip.tsx","webpack:///./src/app/Components/Artifact/SlotIcon.tsx","webpack:///./src/app/Components/Weapon/WeaponCardPico.tsx","webpack:///./src/app/Components/Weapon/WeaponFullCard.tsx","webpack:///./src/app/Components/Character/CharacterCard.tsx","webpack:///./src/app/Components/Character/CharacterCardPico.tsx","webpack:///./src/app/Components/SolidColoredToggleButton.tsx","webpack:///./src/app/Components/ToggleButton/ElementToggle.tsx","webpack:///./src/app/Components/ToggleButton/WeaponToggle.tsx","webpack:///./src/app/Components/Weapon/WeaponNameTooltip.tsx","webpack:///./src/app/Data/Resonance.tsx","webpack:///./src/app/Components/ElementCycle.tsx","webpack:///./src/app/ReactHooks/useCharMeta.tsx","webpack:///./src/app/ReactHooks/useCharSelectionCallback.tsx","webpack:///./src/app/ReactHooks/useCharacter.tsx","webpack:///./src/app/ReactHooks/useCharacterReducer.tsx","webpack:///./src/app/ReactHooks/useTeamData.tsx","webpack:///./src/app/ReactHooks/useWeapon.tsx","webpack:///./src/app/Util/AssetUtil.tsx","webpack:///./src/app/Util/totalUtils.ts","webpack:///../../node_modules/@mui/icons-material/Favorite.js","webpack:///../../node_modules/@mui/icons-material/FavoriteBorder.js","webpack:///../../node_modules/@mui/icons-material/esm/DeleteForever.js","webpack:///../../node_modules/@mui/icons-material/esm/FactCheck.js","webpack:///../../node_modules/@mui/icons-material/esm/FavoriteBorder.js","webpack:///../../node_modules/@mui/icons-material/esm/Science.js","webpack:///../../node_modules/@mui/icons-material/esm/TrendingUp.js"],"sourcesContent":["import type { ArtifactSlotKey } from '@genshin-optimizer/consts'\nimport { allElementWithPhyKeys } from '@genshin-optimizer/consts'\nimport { artifactAsset, imgAssets } from '@genshin-optimizer/g-assets'\nimport { Box, Typography } from '@mui/material'\nimport Artifact from '../../Data/Artifacts/Artifact'\nimport StatIcon from '../../KeyMap/StatIcon'\nimport type { ICachedArtifact } from '../../Types/artifact'\nimport CardDark from '../Card/CardDark'\nimport SqBadge from '../SqBadge'\nimport ArtifactTooltip from './ArtifactTooltip'\n\nexport default function ArtifactCardPico({\n  artifactObj: art,\n  slotKey: key,\n}: {\n  artifactObj: ICachedArtifact | undefined\n  slotKey: ArtifactSlotKey\n}) {\n  // Blank artifact slot icon\n  if (!art)\n    return (\n      <CardDark\n        sx={{ display: 'flex', flexDirection: 'column', height: '100%' }}\n      >\n        <Box sx={{ width: '100%', pb: '100%', position: 'relative' }}>\n          <Box\n            sx={{\n              position: 'absolute',\n              width: '70%',\n              height: '70%',\n              left: '50%',\n              top: '50%',\n              transform: 'translate(-50%, -50%)',\n              opacity: 0.7,\n            }}\n            component=\"img\"\n            src={imgAssets.slot[key]}\n          />\n        </Box>\n      </CardDark>\n    )\n\n  // Actual artifact icon + info\n  const { mainStatKey, rarity, level } = art\n  const element = allElementWithPhyKeys.find((ele) =>\n    art.mainStatKey.includes(ele)\n  )\n  const color = element ?? 'secondary'\n\n  return (\n    <ArtifactTooltip art={art}>\n      <CardDark\n        sx={{ display: 'flex', flexDirection: 'column', position: 'relative' }}\n      >\n        <Box\n          component=\"img\"\n          className={`grad-${rarity}star`}\n          src={artifactAsset(art.setKey, art.slotKey)}\n          maxWidth=\"100%\"\n          maxHeight=\"100%\"\n        />\n        <Typography\n          sx={{\n            position: 'absolute',\n            fontSize: '0.75rem',\n            lineHeight: 1,\n            opacity: 0.85,\n            pointerEvents: 'none',\n          }}\n        >\n          <strong>\n            <SqBadge sx={{ p: 0.5 }} color={Artifact.levelVariant(level)}>\n              <strong>+{level}</strong>\n            </SqBadge>\n          </strong>\n        </Typography>\n        <Typography\n          sx={{\n            position: 'absolute',\n            fontSize: '0.75rem',\n            lineHeight: 1,\n            opacity: 0.85,\n            pointerEvents: 'none',\n            bottom: 0,\n            right: 0,\n          }}\n        >\n          <SqBadge color={color} sx={{ p: 0.5 }}>\n            <StatIcon\n              statKey={mainStatKey}\n              iconProps={{ fontSize: 'inherit' }}\n            />\n          </SqBadge>\n        </Typography>\n      </CardDark>\n    </ArtifactTooltip>\n  )\n}\n","import {\n  artDisplayValue,\n  getMainStatDisplayStr,\n} from '@genshin-optimizer/gi-util'\nimport { iconInlineProps } from '@genshin-optimizer/svgicons'\nimport { clamp, unit } from '@genshin-optimizer/util'\nimport { Box, Skeleton, Typography } from '@mui/material'\nimport { Suspense } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { getArtSheet } from '../../Data/Artifacts'\nimport Artifact from '../../Data/Artifacts/Artifact'\nimport KeyMap from '../../KeyMap'\nimport StatIcon from '../../KeyMap/StatIcon'\nimport type { ICachedArtifact, ICachedSubstat } from '../../Types/artifact'\nimport BootstrapTooltip from '../BootstrapTooltip'\nimport LocationName from '../Character/LocationName'\nimport SqBadge from '../SqBadge'\nimport { StarsDisplay } from '../StarDisplay'\nimport SlotIcon from './SlotIcon'\n\nexport default function ArtifactTooltip({\n  art,\n  children,\n}: {\n  art: ICachedArtifact\n  children: JSX.Element\n}) {\n  const fallback = (\n    <Box>\n      <Skeleton variant=\"rectangular\" width={100} height={100} />\n    </Box>\n  )\n  const title = (\n    <Suspense fallback={fallback}>\n      <ArtifactData art={art} />\n    </Suspense>\n  )\n\n  return (\n    <BootstrapTooltip placement=\"top\" title={title} disableInteractive>\n      {children}\n    </BootstrapTooltip>\n  )\n}\nfunction ArtifactData({ art }: { art: ICachedArtifact }) {\n  const { t: tk } = useTranslation('statKey_gen')\n  const sheet = getArtSheet(art.setKey)\n  const { slotKey, level, rarity, mainStatKey, substats } = art\n  const slotName = sheet.getSlotName(slotKey)\n  const mainVariant = KeyMap.getVariant(mainStatKey)\n  return (\n    <Box p={1}>\n      <Typography variant=\"h6\">\n        <SlotIcon slotKey={slotKey} iconProps={iconInlineProps} /> {slotName}\n      </Typography>\n      <Typography variant=\"subtitle1\" color={`${mainVariant}.main`}>\n        <StatIcon statKey={mainStatKey} iconProps={iconInlineProps} />{' '}\n        {tk(mainStatKey)} {getMainStatDisplayStr(mainStatKey, rarity, level)}\n      </Typography>\n      <Typography\n        variant=\"subtitle2\"\n        sx={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n        }}\n      >\n        <StarsDisplay stars={rarity} />\n        <SqBadge color={Artifact.levelVariant(level)}>+{level}</SqBadge>{' '}\n      </Typography>\n      <Box py={1}>\n        {substats.map(\n          (stat: ICachedSubstat) =>\n            !!stat.value && (\n              <Typography\n                key={stat.key}\n                color={`roll${clamp(stat.rolls.length, 1, 6)}.main`}\n              >\n                <StatIcon statKey={stat.key} iconProps={iconInlineProps} />{' '}\n                {tk(stat.key)}{' '}\n                <strong>{`+${artDisplayValue(stat.value, unit(stat.key))}${unit(\n                  stat.key\n                )}`}</strong>\n              </Typography>\n            )\n        )}\n      </Box>\n\n      <Typography color=\"success.main\">{sheet.name}</Typography>\n      <LocationName color=\"secondary.main\" location={art.location} />\n    </Box>\n  )\n}\n","import type { ArtifactSlotKey } from '@genshin-optimizer/consts'\nimport {\n  CircletIcon,\n  FlowerIcon,\n  GobletIcon,\n  PlumeIcon,\n  SandsIcon,\n} from '@genshin-optimizer/gi-svgicons'\nimport type { SvgIconProps } from '@mui/material'\n\nexport default function SlotIcon({\n  slotKey,\n  iconProps = {},\n}: {\n  slotKey: ArtifactSlotKey\n  iconProps?: SvgIconProps\n}) {\n  switch (slotKey) {\n    case 'flower':\n      return <FlowerIcon {...iconProps} />\n    case 'plume':\n      return <PlumeIcon {...iconProps} />\n    case 'sands':\n      return <SandsIcon {...iconProps} />\n    case 'goblet':\n      return <GobletIcon {...iconProps} />\n    case 'circlet':\n      return <CircletIcon {...iconProps} />\n  }\n}\n","import { weaponAsset } from '@genshin-optimizer/g-assets'\nimport { Box, Typography } from '@mui/material'\nimport { useMemo } from 'react'\nimport { getWeaponSheet } from '../../Data/Weapons'\nimport WeaponSheet from '../../Data/Weapons/WeaponSheet'\nimport { uiInput as input } from '../../Formula'\nimport { computeUIData, dataObjForWeapon } from '../../Formula/api'\nimport type { NodeDisplay } from '../../Formula/uiData'\nimport { nodeVStr } from '../../Formula/uiData'\nimport useWeapon from '../../ReactHooks/useWeapon'\nimport CardDark from '../Card/CardDark'\nimport SqBadge from '../SqBadge'\nimport WeaponNameTooltip from './WeaponNameTooltip'\n\nexport default function WeaponCardPico({ weaponId }: { weaponId: string }) {\n  const weapon = useWeapon(weaponId)\n  const weaponSheet = weapon?.key && getWeaponSheet(weapon.key)\n  const UIData = useMemo(\n    () =>\n      weaponSheet &&\n      weapon &&\n      computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]),\n    [weaponSheet, weapon]\n  )\n  if (!weapon || !weaponSheet || !UIData) return null\n\n  const tooltipAddl = (\n    <Box>\n      <WeaponStatPico node={UIData.get(input.weapon.main)} />\n      <WeaponStatPico node={UIData.get(input.weapon.sub)} />\n    </Box>\n  )\n\n  return (\n    <CardDark\n      sx={{\n        height: '100%',\n        maxWidth: 128,\n        position: 'relative',\n        display: 'flex',\n        flexDirection: 'column',\n      }}\n    >\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        alignContent=\"flex-end\"\n        className={`grad-${weaponSheet.rarity}star`}\n      >\n        <WeaponNameTooltip sheet={weaponSheet} addlText={tooltipAddl}>\n          <Box\n            component=\"img\"\n            src={weaponAsset(weapon.key, weapon.ascension >= 2)}\n            maxWidth=\"100%\"\n            maxHeight=\"100%\"\n            sx={{ mt: 'auto' }}\n          />\n        </WeaponNameTooltip>\n      </Box>\n      <Typography\n        sx={{\n          position: 'absolute',\n          fontSize: '0.75rem',\n          lineHeight: 1,\n          opacity: 0.85,\n          pointerEvents: 'none',\n        }}\n      >\n        <strong>\n          <SqBadge color=\"primary\">\n            {WeaponSheet.getLevelString(weapon)}\n          </SqBadge>\n        </strong>\n      </Typography>\n      {weaponSheet.hasRefinement && (\n        <Typography\n          sx={{\n            position: 'absolute',\n            fontSize: '0.75rem',\n            lineHeight: 1,\n            opacity: 0.85,\n            pointerEvents: 'none',\n            bottom: 0,\n            right: 0,\n          }}\n        >\n          <strong>\n            <SqBadge color=\"secondary\">R{weapon.refinement}</SqBadge>\n          </strong>\n        </Typography>\n      )}\n    </CardDark>\n  )\n}\nfunction WeaponStatPico({ node }: { node: NodeDisplay }) {\n  return (\n    <Typography>\n      {node.info.icon} {nodeVStr(node)}\n    </Typography>\n  )\n}\n","import { weaponAsset } from '@genshin-optimizer/g-assets'\nimport { Box, Typography } from '@mui/material'\nimport { useMemo } from 'react'\nimport { getWeaponSheet } from '../../Data/Weapons'\nimport WeaponSheet from '../../Data/Weapons/WeaponSheet'\nimport { uiInput as input } from '../../Formula'\nimport { computeUIData, dataObjForWeapon } from '../../Formula/api'\nimport type { NodeDisplay } from '../../Formula/uiData'\nimport { nodeVStr } from '../../Formula/uiData'\nimport useWeapon from '../../ReactHooks/useWeapon'\nimport type { ICachedWeapon } from '../../Types/weapon'\nimport CardDark from '../Card/CardDark'\nimport SqBadge from '../SqBadge'\n\nexport default function WeaponFullCard({ weaponId }: { weaponId: string }) {\n  const weapon = useWeapon(weaponId)\n  const weaponSheet = weapon?.key && getWeaponSheet(weapon.key)\n  const UIData = useMemo(\n    () =>\n      weaponSheet &&\n      weapon &&\n      computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]),\n    [weaponSheet, weapon]\n  )\n  if (!weapon || !weaponSheet || !UIData) return null\n  return (\n    <CardDark>\n      <Box display=\"flex\">\n        <Box\n          flexShrink={1}\n          maxWidth=\"35%\"\n          display=\"flex\"\n          flexDirection=\"column\"\n          alignContent=\"flex-end\"\n          className={`grad-${weaponSheet.rarity}star`}\n        >\n          <Box\n            component=\"img\"\n            src={weaponAsset(weapon.key, weapon.ascension >= 2)}\n            width=\"100%\"\n            height=\"auto\"\n            sx={{ mt: 'auto' }}\n          />\n        </Box>\n        <Box flexGrow={1} sx={{ p: 1 }}>\n          <Typography variant=\"body2\" gutterBottom>\n            <strong>{weaponSheet?.name}</strong>\n          </Typography>\n          <Typography\n            variant=\"subtitle1\"\n            sx={{ display: 'flex', gap: 1 }}\n            gutterBottom\n          >\n            <SqBadge color=\"primary\">\n              Lv. {WeaponSheet.getLevelString(weapon as ICachedWeapon)}\n            </SqBadge>\n            {weaponSheet.hasRefinement && (\n              <SqBadge color=\"info\">R{weapon.refinement}</SqBadge>\n            )}\n          </Typography>\n          <Typography variant=\"subtitle1\" sx={{ display: 'flex', gap: 1 }}>\n            <WeaponStat node={UIData.get(input.weapon.main)} />\n            <WeaponStat node={UIData.get(input.weapon.sub)} />\n          </Typography>\n        </Box>\n      </Box>\n    </CardDark>\n  )\n}\nfunction WeaponStat({ node }: { node: NodeDisplay }) {\n  return (\n    <SqBadge color=\"secondary\">\n      {node.info.icon} {nodeVStr(node)}\n    </SqBadge>\n  )\n}\n","import type {\n  ArtifactSlotKey,\n  CharacterKey,\n  ElementKey,\n} from '@genshin-optimizer/consts'\nimport { allArtifactSlotKeys } from '@genshin-optimizer/consts'\nimport { characterAsset } from '@genshin-optimizer/g-assets'\nimport { ascensionMaxLevel } from '@genshin-optimizer/gi-util'\nimport { range } from '@genshin-optimizer/util'\nimport { Favorite, FavoriteBorder } from '@mui/icons-material'\nimport {\n  Box,\n  CardActionArea,\n  CardContent,\n  Chip,\n  Grid,\n  IconButton,\n  Skeleton,\n  Typography,\n} from '@mui/material'\nimport { Suspense, useCallback, useContext, useMemo } from 'react'\nimport type { CharacterContextObj } from '../../Context/CharacterContext'\nimport { CharacterContext } from '../../Context/CharacterContext'\nimport type { dataContextObj } from '../../Context/DataContext'\nimport { DataContext } from '../../Context/DataContext'\nimport { SillyContext } from '../../Context/SillyContext'\nimport { getCharSheet } from '../../Data/Characters'\nimport { DatabaseContext } from '../../Database/Database'\nimport { uiInput as input } from '../../Formula'\nimport useCharacter from '../../ReactHooks/useCharacter'\nimport useCharacterReducer from '../../ReactHooks/useCharacterReducer'\nimport useCharMeta from '../../ReactHooks/useCharMeta'\nimport useDBMeta from '../../ReactHooks/useDBMeta'\nimport useTeamData from '../../ReactHooks/useTeamData'\nimport type { ICachedArtifact } from '../../Types/artifact'\nimport type { ICachedCharacter } from '../../Types/character'\nimport type { RollColorKey } from '../../Types/consts'\nimport { iconAsset } from '../../Util/AssetUtil'\nimport ArtifactCardPico from '../Artifact/ArtifactCardPico'\nimport CardLight from '../Card/CardLight'\nimport ColorText from '../ColoredText'\nimport ConditionalWrapper from '../ConditionalWrapper'\nimport { NodeFieldDisplay } from '../FieldDisplay'\nimport SqBadge from '../SqBadge'\nimport { StarsDisplay } from '../StarDisplay'\nimport WeaponCardPico from '../Weapon/WeaponCardPico'\nimport WeaponFullCard from '../Weapon/WeaponFullCard'\nimport CharacterCardPico, { BlankCharacterCardPico } from './CharacterCardPico'\n\ntype CharacterCardProps = {\n  characterKey: CharacterKey\n  onClick?: (characterKey: CharacterKey) => void\n  onClickHeader?: (characterKey: CharacterKey) => void\n  onClickTeammate?: (characterKey: CharacterKey) => void\n  artifactChildren?: Displayable\n  weaponChildren?: Displayable\n  characterChildren?: Displayable\n  footer?: Displayable\n  hideStats?: boolean\n  isTeammateCard?: boolean\n}\nexport default function CharacterCard({\n  characterKey,\n  artifactChildren,\n  weaponChildren,\n  characterChildren,\n  onClick,\n  onClickHeader,\n  onClickTeammate,\n  footer,\n  hideStats,\n  isTeammateCard,\n}: CharacterCardProps) {\n  const { database } = useContext(DatabaseContext)\n  const teamData = useTeamData(characterKey)\n  const character = useCharacter(characterKey)\n  const { gender } = useDBMeta()\n  const characterSheet = getCharSheet(characterKey, gender)\n  const characterDispatch = useCharacterReducer(characterKey)\n  const data = teamData?.[characterKey]?.target\n  const onClickHandler = useCallback(\n    () => characterKey && onClick?.(characterKey),\n    [characterKey, onClick]\n  )\n  const actionWrapperFunc = useCallback(\n    (children) => (\n      <CardActionArea\n        onClick={onClickHandler}\n        sx={{ flexGrow: 1, display: 'flex', flexDirection: 'column' }}\n      >\n        {children}\n      </CardActionArea>\n    ),\n    [onClickHandler]\n  )\n\n  const characterContextObj: CharacterContextObj | undefined = useMemo(\n    () =>\n      character &&\n      characterSheet && {\n        character,\n        characterSheet,\n        characterDispatch,\n      },\n    [character, characterSheet, characterDispatch]\n  )\n  const dataContextObj: dataContextObj | undefined = useMemo(\n    () =>\n      data &&\n      teamData && {\n        data,\n        teamData,\n      },\n    [data, teamData]\n  )\n\n  const { favorite } = useCharMeta(characterKey)\n  return (\n    <Suspense\n      fallback={\n        <Skeleton\n          variant=\"rectangular\"\n          width=\"100%\"\n          height={hideStats ? 300 : 600}\n        />\n      }\n    >\n      <CardLight\n        sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n      >\n        <Box\n          sx={{\n            display: 'flex',\n            position: 'absolute',\n            zIndex: 2,\n            opacity: 0.7,\n          }}\n        >\n          <IconButton\n            sx={{ p: 0.5 }}\n            onClick={(_) =>\n              database.charMeta.set(characterKey, { favorite: !favorite })\n            }\n          >\n            {favorite ? <Favorite /> : <FavoriteBorder />}\n          </IconButton>\n        </Box>\n        <ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc}>\n          {character && dataContextObj && characterContextObj ? (\n            <ExistingCharacterCardContent\n              characterContextObj={characterContextObj}\n              dataContextObj={dataContextObj}\n              characterKey={characterKey}\n              onClick={onClick}\n              onClickHeader={onClickHeader}\n              isTeammateCard={isTeammateCard}\n              character={character}\n              onClickTeammate={onClickTeammate}\n              hideStats={hideStats}\n              weaponChildren={weaponChildren}\n              artifactChildren={artifactChildren}\n              characterChildren={characterChildren}\n            />\n          ) : (\n            <NewCharacterCardContent characterKey={characterKey} />\n          )}\n        </ConditionalWrapper>\n        {footer}\n      </CardLight>\n    </Suspense>\n  )\n}\n\ntype ExistingCharacterCardContentProps = {\n  characterContextObj: CharacterContextObj\n  dataContextObj: dataContextObj\n  characterKey: CharacterKey\n  onClick?: (characterKey: CharacterKey) => void\n  onClickHeader?: (characterKey: CharacterKey) => void\n  isTeammateCard?: boolean\n  character: ICachedCharacter\n  onClickTeammate?: (characterKey: CharacterKey) => void\n  hideStats?: boolean\n  weaponChildren?: Displayable\n  artifactChildren?: Displayable\n  characterChildren?: Displayable\n}\nfunction ExistingCharacterCardContent({\n  characterContextObj,\n  dataContextObj,\n  characterKey,\n  onClick,\n  onClickHeader,\n  isTeammateCard,\n  character,\n  onClickTeammate,\n  hideStats,\n  weaponChildren,\n  artifactChildren,\n  characterChildren,\n}: ExistingCharacterCardContentProps) {\n  return (\n    <CharacterContext.Provider value={characterContextObj}>\n      <DataContext.Provider value={dataContextObj}>\n        <Header\n          characterKey={characterKey}\n          onClick={!onClick ? onClickHeader : undefined}\n        >\n          <HeaderContent />\n        </Header>\n        <CardContent\n          sx={(theme) => ({\n            width: '100%',\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 1,\n            flexGrow: 1,\n            padding: hideStats ? `${theme.spacing(1)}!important` : undefined,\n          })}\n        >\n          <Artifacts />\n          {!isTeammateCard && (\n            <Grid container columns={4} spacing={0.75}>\n              <Grid item xs={1} height=\"100%\">\n                <WeaponCardPico weaponId={character.equippedWeapon} />\n              </Grid>\n              {range(0, 2).map((i) => (\n                <Grid key={i} item xs={1} height=\"100%\">\n                  {character.team[i] ? (\n                    <CharacterCardPico\n                      simpleTooltip={hideStats}\n                      characterKey={character.team[i] as CharacterKey}\n                      onClick={!onClick ? onClickTeammate : undefined}\n                    />\n                  ) : (\n                    <BlankCharacterCardPico index={i} />\n                  )}\n                </Grid>\n              ))}\n            </Grid>\n          )}\n          {isTeammateCard && (\n            <WeaponFullCard weaponId={character.equippedWeapon} />\n          )}\n          {!isTeammateCard && !hideStats && <Stats />}\n          {weaponChildren}\n          {artifactChildren}\n          {characterChildren}\n        </CardContent>\n      </DataContext.Provider>\n    </CharacterContext.Provider>\n  )\n}\n\nfunction NewCharacterCardContent({\n  characterKey,\n}: {\n  characterKey: CharacterKey\n}) {\n  return (\n    <>\n      <Header characterKey={characterKey}>\n        <HeaderContentNew characterKey={characterKey} />\n      </Header>\n      <CardContent\n        sx={{\n          width: '100%',\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 1,\n          flexGrow: 1,\n          height: '100%',\n        }}\n      ></CardContent>\n    </>\n  )\n}\n\nfunction Header({\n  children,\n  characterKey,\n  onClick,\n}: {\n  children: JSX.Element\n  characterKey: CharacterKey\n  onClick?: (characterKey: CharacterKey) => void\n}) {\n  const { gender } = useDBMeta()\n  const { silly } = useContext(SillyContext)\n  const characterSheet = getCharSheet(characterKey, gender)\n\n  const actionWrapperFunc = useCallback(\n    (children) => (\n      <CardActionArea\n        onClick={() => characterKey && onClick?.(characterKey)}\n        sx={{ flexGrow: 1, display: 'flex', flexDirection: 'column' }}\n      >\n        {children}\n      </CardActionArea>\n    ),\n    [onClick, characterKey]\n  )\n  const banner = characterAsset(characterKey, 'banner', gender)\n  if (!characterSheet) return null\n  return (\n    <ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc}>\n      <Box\n        display=\"flex\"\n        position=\"relative\"\n        className={!banner ? `grad-${characterSheet.rarity}star` : undefined}\n        sx={{\n          '&::before': {\n            content: '\"\"',\n            display: 'block',\n            position: 'absolute',\n            left: 0,\n            top: 0,\n            width: '100%',\n            height: '100%',\n            opacity: 0.7,\n            backgroundImage: `url(${banner})`,\n            backgroundPosition: 'center',\n            backgroundSize: 'cover',\n          },\n        }}\n        width=\"100%\"\n      >\n        <Box\n          flexShrink={1}\n          component=\"img\"\n          src={iconAsset(characterKey, gender, silly)}\n          sx={{ maxWidth: '40%' }}\n          alignSelf=\"flex-end\"\n          display=\"flex\"\n          flexDirection=\"column\"\n          zIndex={1}\n        />\n        <Box\n          flexGrow={1}\n          sx={{ py: 1, pr: 1 }}\n          display=\"flex\"\n          flexDirection=\"column\"\n          zIndex={1}\n          justifyContent=\"space-between\"\n        >\n          {children}\n        </Box>\n      </Box>\n    </ConditionalWrapper>\n  )\n}\n\nfunction HeaderContent() {\n  const { characterSheet } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const characterEle = data.get(input.charEle).value as ElementKey\n  const characterLevel = data.get(input.lvl).value\n  const constellation = data.get(input.constellation).value\n  const ascension = data.get(input.asc).value\n  const autoBoost = data.get(input.total.autoBoost).value\n  const skillBoost = data.get(input.total.skillBoost).value\n  const burstBoost = data.get(input.total.burstBoost).value\n\n  const tAuto = data.get(input.total.auto).value\n  const tSkill = data.get(input.total.skill).value\n  const tBurst = data.get(input.total.burst).value\n\n  return (\n    <>\n      <Chip\n        label={\n          <Typography variant=\"subtitle1\">{characterSheet.name}</Typography>\n        }\n        size=\"small\"\n        color={characterEle}\n        sx={{ opacity: 0.85 }}\n      />\n      <Box\n        display=\"flex\"\n        gap={1}\n        sx={{ textShadow: '0 0 5px gray' }}\n        alignItems=\"center\"\n      >\n        <Box>\n          <Typography component=\"span\" variant=\"h6\" whiteSpace=\"nowrap\">\n            Lv. {characterLevel}\n          </Typography>\n          <Typography component=\"span\" variant=\"h6\" color=\"text.secondary\">\n            /{ascensionMaxLevel[ascension]}\n          </Typography>\n        </Box>\n        <Typography component=\"span\" whiteSpace=\"nowrap\" sx={{ opacity: 0.85 }}>\n          <SqBadge\n            color={\n              `roll${constellation < 3 ? 3 : constellation}` as RollColorKey\n            }\n          >\n            <ColorText color=\"white\">\n              <strong>C{constellation}</strong>\n            </ColorText>\n          </SqBadge>\n        </Typography>\n      </Box>\n      <Box display=\"flex\" gap={1} sx={{ opacity: 0.85 }}>\n        <Chip\n          size=\"small\"\n          color={autoBoost ? 'info' : 'secondary'}\n          label={<strong>{tAuto}</strong>}\n        />\n        <Chip\n          size=\"small\"\n          color={skillBoost ? 'info' : 'secondary'}\n          label={<strong>{tSkill}</strong>}\n        />\n        <Chip\n          size=\"small\"\n          color={burstBoost ? 'info' : 'secondary'}\n          label={<strong>{tBurst}</strong>}\n        />\n      </Box>\n      <Typography variant=\"h6\" lineHeight={1}>\n        <StarsDisplay stars={characterSheet.rarity} colored inline />\n      </Typography>\n    </>\n  )\n}\n\nfunction HeaderContentNew({ characterKey }: { characterKey: CharacterKey }) {\n  const { gender } = useDBMeta()\n  const sheet = getCharSheet(characterKey, gender)\n\n  if (!sheet) return null\n  return (\n    <>\n      <Chip\n        label={<Typography variant=\"subtitle1\">{sheet.name}</Typography>}\n        size=\"small\"\n        color={sheet.elementKey}\n        sx={{ opacity: 0.85 }}\n      />\n      <Box mt={1}>\n        <Typography variant=\"h4\">\n          <SqBadge>NEW</SqBadge>\n        </Typography>\n      </Box>\n      <Typography mt={1.5}>\n        <StarsDisplay stars={sheet.rarity} colored />\n      </Typography>\n    </>\n  )\n}\n\nfunction Artifacts() {\n  const { database } = useContext(DatabaseContext)\n  const { data } = useContext(DataContext)\n  const artifacts = useMemo(\n    () =>\n      allArtifactSlotKeys.map((k) => [\n        k,\n        database.arts.get(data.get(input.art[k].id).value?.toString() ?? ''),\n      ]),\n    [data, database]\n  ) as Array<[ArtifactSlotKey, ICachedArtifact | undefined]>\n\n  return (\n    <Grid direction=\"row\" container spacing={0.75} columns={5}>\n      {artifacts.map(\n        ([key, art]: [ArtifactSlotKey, ICachedArtifact | undefined]) => (\n          <Grid item key={key} xs={1}>\n            <ArtifactCardPico artifactObj={art} slotKey={key} />\n          </Grid>\n        )\n      )}\n    </Grid>\n  )\n}\n\nfunction Stats() {\n  const { data } = useContext(DataContext)\n  return (\n    <Box sx={{ width: '100%' }}>\n      {Object.values(data.getDisplay().basic).map((n) => (\n        <NodeFieldDisplay key={JSON.stringify(n.info)} node={n} />\n      ))}\n      {data.get(input.special).info.name && (\n        <Box sx={{ display: 'flex', gap: 1, alignItems: 'center' }}>\n          <Typography flexGrow={1}>\n            <strong>Specialized:</strong>\n          </Typography>\n          {data.get(input.special).info.icon}\n          <Typography>{data.get(input.special).info.name}</Typography>\n        </Box>\n      )}\n    </Box>\n  )\n}\n","import type { CharacterKey } from '@genshin-optimizer/consts'\nimport { imgAssets } from '@genshin-optimizer/g-assets'\nimport { ascensionMaxLevel } from '@genshin-optimizer/gi-util'\nimport FavoriteIcon from '@mui/icons-material/Favorite'\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder'\nimport { Box, CardActionArea, Skeleton, Typography } from '@mui/material'\nimport type { MouseEvent, ReactNode } from 'react'\nimport { Suspense, useCallback, useContext, useEffect, useState } from 'react'\nimport { SillyContext } from '../../Context/SillyContext'\nimport { getCharSheet } from '../../Data/Characters'\nimport { ElementIcon } from '../../KeyMap/StatIcon'\nimport useCharacter from '../../ReactHooks/useCharacter'\nimport useCharMeta from '../../ReactHooks/useCharMeta'\nimport useDBMeta from '../../ReactHooks/useDBMeta'\nimport { iconAsset } from '../../Util/AssetUtil'\nimport BootstrapTooltip from '../BootstrapTooltip'\nimport CardDark from '../Card/CardDark'\nimport ConditionalWrapper from '../ConditionalWrapper'\nimport SqBadge from '../SqBadge'\nimport CharacterCard from './CharacterCard'\n\nexport default function CharacterCardPico({\n  characterKey,\n  onClick,\n  onMouseDown,\n  onMouseEnter,\n  simpleTooltip = false,\n  disableTooltip = false,\n}: {\n  characterKey: CharacterKey\n  onClick?: (characterKey: CharacterKey) => void\n  onMouseDown?: (e: MouseEvent) => void\n  onMouseEnter?: (e: MouseEvent) => void\n  simpleTooltip?: boolean\n  disableTooltip?: boolean\n}) {\n  const character = useCharacter(characterKey)\n  const { favorite } = useCharMeta(characterKey)\n  const { gender } = useDBMeta()\n  const { silly } = useContext(SillyContext)\n  const characterSheet = getCharSheet(characterKey, gender)\n  const onClickHandler = useCallback(\n    () => onClick?.(characterKey),\n    [characterKey, onClick]\n  )\n  const actionWrapperFunc = useCallback(\n    (children: ReactNode) => (\n      <CardActionArea\n        onClick={onClickHandler}\n        onMouseDown={onMouseDown}\n        onMouseEnter={onMouseEnter}\n      >\n        {children}\n      </CardActionArea>\n    ),\n    [onClickHandler, onMouseDown, onMouseEnter]\n  )\n  const [open, setOpen] = useState(false)\n  const onTooltipOpen = useCallback(\n    () => !disableTooltip && setOpen(true),\n    [disableTooltip]\n  )\n  const onTooltipClose = useCallback(() => setOpen(false), [])\n  useEffect(() => {\n    disableTooltip && setOpen(false)\n  }, [disableTooltip])\n\n  const simpleTooltipWrapperFunc = useCallback(\n    (children: ReactNode) => (\n      <BootstrapTooltip\n        placement=\"top\"\n        open={open && !disableTooltip}\n        onClose={onTooltipClose}\n        onOpen={onTooltipOpen}\n        title={\n          <Suspense fallback={<Skeleton width={300} height={400} />}>\n            <Typography>\n              {characterSheet.elementKey && (\n                <ElementIcon\n                  ele={characterSheet.elementKey}\n                  iconProps={{\n                    fontSize: 'inherit',\n                    sx: {\n                      verticalAlign: '-10%',\n                      color: `${characterSheet.elementKey}.main`,\n                    },\n                  }}\n                />\n              )}{' '}\n              {characterSheet.name}\n            </Typography>\n          </Suspense>\n        }\n      >\n        {children as JSX.Element}\n      </BootstrapTooltip>\n    ),\n    [\n      characterSheet.elementKey,\n      characterSheet.name,\n      disableTooltip,\n      onTooltipClose,\n      onTooltipOpen,\n      open,\n    ]\n  )\n  const charCardTooltipWrapperFunc = useCallback(\n    (children: ReactNode) => (\n      <BootstrapTooltip\n        enterNextDelay={500}\n        enterTouchDelay={500}\n        placement=\"top\"\n        open={open && !disableTooltip}\n        onClose={onTooltipClose}\n        onOpen={onTooltipOpen}\n        title={\n          <Box sx={{ width: 300, m: -1 }}>\n            <CharacterCard hideStats characterKey={characterKey} />\n          </Box>\n        }\n      >\n        {children as JSX.Element}\n      </BootstrapTooltip>\n    ),\n    [characterKey, disableTooltip, onTooltipClose, onTooltipOpen, open]\n  )\n\n  return (\n    <ConditionalWrapper\n      condition={simpleTooltip}\n      wrapper={simpleTooltipWrapperFunc}\n      falseWrapper={charCardTooltipWrapperFunc}\n    >\n      <CardDark\n        sx={{\n          maxWidth: 128,\n          position: 'relative',\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        <ConditionalWrapper\n          condition={!!onClick || !!onMouseDown || !!onMouseEnter}\n          wrapper={actionWrapperFunc}\n        >\n          <Box display=\"flex\" className={`grad-${characterSheet.rarity}star`}>\n            <Box\n              component=\"img\"\n              src={iconAsset(characterKey, gender, silly)}\n              maxWidth=\"100%\"\n              maxHeight=\"100%\"\n              draggable={false}\n            />\n          </Box>\n          {character && (\n            <Typography\n              sx={{\n                position: 'absolute',\n                fontSize: '0.75rem',\n                lineHeight: 1,\n                opacity: 0.85,\n                pointerEvents: 'none',\n                top: 0,\n              }}\n            >\n              <strong>\n                <SqBadge color=\"primary\">\n                  {character.level}/{ascensionMaxLevel[character.ascension]}\n                </SqBadge>\n              </strong>\n            </Typography>\n          )}\n          <Box sx={{ position: 'absolute', top: 0, right: 0 }}>\n            {favorite ? (\n              <FavoriteIcon fontSize=\"small\" />\n            ) : (\n              <FavoriteBorderIcon fontSize=\"small\" />\n            )}\n          </Box>\n          {character && (\n            <Typography\n              sx={{\n                position: 'absolute',\n                fontSize: '0.75rem',\n                lineHeight: 1,\n                opacity: 0.85,\n                pointerEvents: 'none',\n                bottom: 0,\n                right: 0,\n              }}\n            >\n              <strong>\n                <SqBadge color=\"secondary\">C{character.constellation}</SqBadge>\n              </strong>\n            </Typography>\n          )}\n        </ConditionalWrapper>\n      </CardDark>\n    </ConditionalWrapper>\n  )\n}\n\nexport function BlankCharacterCardPico({ index }: { index: number }) {\n  return (\n    <CardDark\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        py: '12.5%',\n      }}\n    >\n      <Box\n        component=\"img\"\n        src={imgAssets.team[`team${index + 2}`]}\n        sx={{ width: '75%', height: 'auto', opacity: 0.7 }}\n      />\n    </CardDark>\n  )\n}\n","import type { ButtonProps, ToggleButtonProps } from '@mui/material'\nimport { ToggleButton, styled } from '@mui/material'\n\ntype SolidColoredToggleButtonPartial = {\n  baseColor?: ButtonProps['color']\n  selectedColor?: ButtonProps['color']\n}\nexport type SolidColoredToggleButtonProps = SolidColoredToggleButtonPartial &\n  ToggleButtonProps\n\nconst SolidColoredToggleButton = styled(ToggleButton, {\n  shouldForwardProp: (prop) => prop !== 'baseColor' && prop !== 'selectedColor',\n})<SolidColoredToggleButtonPartial>(\n  ({ theme, baseColor = 'secondary', selectedColor = 'success' }) => ({\n    '&': {\n      backgroundColor: theme.palette[baseColor].main,\n      color: theme.palette[baseColor].contrastText,\n    },\n    '&:hover': {\n      backgroundColor: theme.palette[baseColor].dark,\n    },\n    '&.Mui-selected': {\n      backgroundColor: theme.palette[selectedColor].main,\n      color: theme.palette[selectedColor].contrastText,\n    },\n    '&.Mui-selected:hover': {\n      backgroundColor: theme.palette[selectedColor].dark,\n    },\n    '&.Mui-disabled': {\n      backgroundColor: theme.palette[baseColor].dark,\n    },\n    '&.Mui-selected.Mui-disabled': {\n      backgroundColor: theme.palette[selectedColor].dark,\n    },\n  })\n)\n\nexport default SolidColoredToggleButton\n","import type { ElementKey } from '@genshin-optimizer/consts'\nimport { allElementKeys } from '@genshin-optimizer/consts'\nimport { Chip, ToggleButtonGroup, useMediaQuery, useTheme } from '@mui/material'\nimport { ElementIcon } from '../../KeyMap/StatIcon'\nimport { handleMultiSelect } from '../../Util/MultiSelect'\nimport SolidColoredToggleButton from '../SolidColoredToggleButton'\nimport type { SolidToggleButtonGroupProps } from '../SolidToggleButtonGroup'\ntype ElementToggleProps = Omit<\n  SolidToggleButtonGroupProps,\n  'onChange' | 'value'\n> & {\n  onChange: (value: ElementKey[]) => void\n  value: ElementKey[]\n  totals: Record<ElementKey, Displayable>\n}\nconst elementHandler = handleMultiSelect([...allElementKeys])\nexport default function ElementToggle({\n  value,\n  totals,\n  onChange,\n  ...props\n}: ElementToggleProps) {\n  const theme = useTheme()\n  const sm = !useMediaQuery(theme.breakpoints.up('md'))\n  const xs = !useMediaQuery(theme.breakpoints.up('sm'))\n  return (\n    <ToggleButtonGroup exclusive value={value} {...props}>\n      {allElementKeys.map((ele) => (\n        <SolidColoredToggleButton\n          key={ele}\n          value={ele}\n          sx={{\n            p: sm ? 1 : undefined,\n            minWidth: sm ? 0 : '6em',\n            display: 'flex',\n          }}\n          selectedColor={ele}\n          onClick={() => onChange(elementHandler(value, ele))}\n        >\n          <ElementIcon\n            ele={ele}\n            iconProps={{ fontSize: sm && !xs ? 'inherit' : undefined }}\n          />\n          {!xs && <Chip sx={{ ml: 0.5 }} label={totals[ele]} size=\"small\" />}\n        </SolidColoredToggleButton>\n      ))}\n    </ToggleButtonGroup>\n  )\n}\n","import type { WeaponTypeKey } from '@genshin-optimizer/consts'\nimport { allWeaponTypeKeys } from '@genshin-optimizer/consts'\nimport { imgAssets } from '@genshin-optimizer/g-assets'\nimport { Chip, ToggleButton, useMediaQuery, useTheme } from '@mui/material'\nimport { handleMultiSelect } from '../../Util/MultiSelect'\nimport ImgIcon from '../Image/ImgIcon'\nimport type { SolidToggleButtonGroupProps } from '../SolidToggleButtonGroup'\nimport SolidToggleButtonGroup from '../SolidToggleButtonGroup'\ntype WeaponToggleProps = Omit<\n  SolidToggleButtonGroupProps,\n  'onChange' | 'value'\n> & {\n  onChange: (value: WeaponTypeKey[]) => void\n  value: WeaponTypeKey[]\n  totals: Record<WeaponTypeKey, Displayable>\n}\n\nconst weaponTypeHandler = handleMultiSelect([...allWeaponTypeKeys])\nexport default function WeaponToggle({\n  value,\n  totals,\n  onChange,\n  ...props\n}: WeaponToggleProps) {\n  const theme = useTheme()\n  const xs = !useMediaQuery(theme.breakpoints.up('sm'))\n  return (\n    <SolidToggleButtonGroup exclusive value={value} {...props}>\n      {allWeaponTypeKeys.map((wt) => (\n        <ToggleButton\n          key={wt}\n          value={wt}\n          sx={{\n            p: xs ? 1 : undefined,\n            minWidth: xs ? 0 : '7em',\n            display: 'flex',\n            gap: xs ? 0 : 1,\n          }}\n          onClick={() => onChange(weaponTypeHandler(value, wt))}\n        >\n          <ImgIcon src={imgAssets.weaponTypes?.[wt]} size={2} sideMargin />\n          <Chip label={totals[wt]} size=\"small\" />\n        </ToggleButton>\n      ))}\n    </SolidToggleButtonGroup>\n  )\n}\n","import { imgAssets } from '@genshin-optimizer/g-assets'\nimport { Skeleton, Typography } from '@mui/material'\nimport type { ReactElement, ReactNode } from 'react'\nimport { Suspense } from 'react'\nimport type WeaponSheet from '../../Data/Weapons/WeaponSheet'\nimport BootstrapTooltip from '../BootstrapTooltip'\nimport ImgIcon from '../Image/ImgIcon'\n\ntype Data = {\n  sheet: WeaponSheet\n  addlText?: any\n  children: ReactElement<any, any> & ReactNode\n}\nexport default function WeaponNameTooltip({ sheet, addlText, children }: Data) {\n  const title = (\n    <Suspense fallback={<Skeleton variant=\"text\" width={100} />}>\n      <Typography>\n        <ImgIcon src={imgAssets.weaponTypes[sheet.weaponType]} size={1.5} />{' '}\n        {sheet.name}\n      </Typography>\n      {addlText}\n    </Suspense>\n  )\n  return (\n    <BootstrapTooltip placement=\"top\" title={title} disableInteractive>\n      {children}\n    </BootstrapTooltip>\n  )\n}\n","import {\n  allElementKeys,\n  allElementWithPhyKeys,\n} from '@genshin-optimizer/consts'\nimport {\n  AnemoIcon,\n  CryoIcon,\n  DendroIcon,\n  ElectroIcon,\n  GeoIcon,\n  HydroIcon,\n  PyroIcon,\n} from '@genshin-optimizer/gi-svgicons'\nimport { iconInlineProps } from '@genshin-optimizer/svgicons'\nimport { objKeyValMap } from '@genshin-optimizer/util'\nimport ElementCycle from '../Components/ElementCycle'\nimport { Translate } from '../Components/Translate'\nimport { input, tally } from '../Formula'\nimport { inferInfoMut } from '../Formula/api'\nimport type { UIData } from '../Formula/uiData'\nimport { equal, greaterEq, infoMut, percent, sum } from '../Formula/utils'\nimport KeyMap from '../KeyMap'\nimport type { DocumentSection } from '../Types/sheet'\nimport { condReadNode, st, stg } from './SheetUtil'\nconst tr = (strKey: string) => (\n  <Translate ns=\"elementalResonance_gen\" key18={strKey} />\n)\nconst trm = (strKey: string) => (\n  <Translate ns=\"elementalResonance\" key18={strKey} />\n)\n\ntype IResonance = {\n  name: Displayable\n  desc: Displayable\n  icon: Displayable\n  canShow: (data: UIData) => boolean\n  sections: DocumentSection[]\n}\n\nconst teamSize = sum(...allElementKeys.map((ele) => tally[ele]))\n\n// Protective Canopy\nconst pcNodes = objKeyValMap(allElementWithPhyKeys, (e) => [\n  `${e}_res_`,\n  equal(\n    input.activeCharKey,\n    input.charKey,\n    greaterEq(tally.ele, 4, percent(0.15))\n  ),\n])\n\nconst protectiveCanopy: IResonance = {\n  name: tr('ProtectiveCanopy.name'),\n  desc: tr('ProtectiveCanopy.desc'),\n  icon: (\n    <span>\n      <ElementCycle iconProps={iconInlineProps} /> x4\n    </span>\n  ),\n  canShow: (data: UIData) =>\n    allElementKeys.filter((e) => data.get(tally[e]).value >= 1).length === 4,\n  sections: [\n    {\n      teamBuff: true,\n      fields: Object.values(pcNodes).map((node) => ({ node })),\n    },\n  ],\n}\n\n// Fervent Flames\nconst ffNode = equal(\n  input.activeCharKey,\n  input.charKey,\n  greaterEq(teamSize, 4, greaterEq(tally.pyro, 2, percent(0.25)))\n)\nconst ferventFlames: IResonance = {\n  name: tr('FerventFlames.name'),\n  desc: tr('FerventFlames.desc'),\n  icon: (\n    <span>\n      <PyroIcon {...iconInlineProps} /> <PyroIcon {...iconInlineProps} />\n    </span>\n  ),\n  canShow: (data: UIData) =>\n    data.get(tally.pyro).value >= 2 && data.get(teamSize).value >= 4,\n  sections: [\n    {\n      teamBuff: true,\n      fields: [\n        {\n          text: st('effectDuration.cryo'),\n          value: -40,\n          unit: '%',\n        },\n        {\n          node: ffNode,\n        },\n      ],\n    },\n  ],\n}\n\n// Soothing Waters\nconst swNode = equal(\n  input.activeCharKey,\n  input.charKey,\n  greaterEq(teamSize, 4, greaterEq(tally.hydro, 2, percent(0.25)))\n)\nconst soothingWaters: IResonance = {\n  name: tr('SoothingWater.name'),\n  desc: tr('SoothingWater.desc'),\n  icon: (\n    <span>\n      <HydroIcon {...iconInlineProps} /> <HydroIcon {...iconInlineProps} />\n    </span>\n  ),\n  canShow: (data: UIData) =>\n    data.get(tally.hydro).value >= 2 && data.get(teamSize).value >= 4,\n  sections: [\n    {\n      teamBuff: true,\n      fields: [\n        {\n          text: st('effectDuration.pyro'),\n          value: -40,\n          unit: '%',\n        },\n        {\n          node: swNode,\n        },\n      ],\n    },\n  ],\n}\n\n//ShatteringIce\nconst condSIPath = ['resonance', 'ShatteringIce']\nconst condSI = condReadNode(condSIPath)\nconst siNode = equal(\n  input.activeCharKey,\n  input.charKey,\n  greaterEq(\n    teamSize,\n    4,\n    greaterEq(tally.cryo, 2, equal(condSI, 'on', percent(0.15)))\n  )\n)\nconst shatteringIce: IResonance = {\n  name: tr('ShatteringIce.name'),\n  desc: tr('ShatteringIce.desc'),\n  icon: (\n    <span>\n      <CryoIcon {...iconInlineProps} /> <CryoIcon {...iconInlineProps} />\n    </span>\n  ),\n  canShow: (data: UIData) =>\n    data.get(tally.cryo).value >= 2 && data.get(teamSize).value >= 4,\n  sections: [\n    {\n      teamBuff: true,\n      fields: [\n        {\n          text: st('effectDuration.electro'),\n          value: -40,\n          unit: '%',\n        },\n      ],\n    },\n    {\n      teamBuff: true,\n      path: condSIPath,\n      value: condSI,\n      name: st('enemyAffected.frozenOrCryo'),\n      header: {\n        title: tr('ShatteringIce.name'),\n        icon: <CryoIcon />,\n      },\n      states: {\n        on: {\n          fields: [\n            {\n              node: siNode,\n            },\n          ],\n        },\n      },\n    },\n  ],\n}\n\n// High Voltage\nconst highVoltage: IResonance = {\n  name: tr('HighVoltage.name'),\n  desc: tr('HighVoltage.desc'),\n  icon: (\n    <span>\n      <ElectroIcon {...iconInlineProps} /> <ElectroIcon {...iconInlineProps} />\n    </span>\n  ),\n  canShow: (data: UIData) =>\n    data.get(tally.electro).value >= 2 && data.get(teamSize).value >= 4,\n  sections: [\n    {\n      teamBuff: true,\n      fields: [\n        {\n          text: st('effectDuration.hydro'),\n          value: -40,\n          unit: '%',\n        },\n      ],\n    },\n  ],\n}\n\n// Impetuous Winds\nconst iwNodeStam = equal(\n  input.activeCharKey,\n  input.charKey,\n  greaterEq(teamSize, 4, greaterEq(tally.anemo, 2, percent(-0.15)))\n)\nconst iwNodeMove = equal(\n  input.activeCharKey,\n  input.charKey,\n  greaterEq(teamSize, 4, greaterEq(tally.anemo, 2, percent(0.1)))\n)\nconst iwNodeCD = equal(\n  input.activeCharKey,\n  input.charKey,\n  greaterEq(teamSize, 4, greaterEq(tally.anemo, 2, percent(-0.05)))\n)\nconst impetuousWinds: IResonance = {\n  name: tr('ImpetuousWinds.name'),\n  desc: tr('ImpetuousWinds.desc'),\n  icon: (\n    <span>\n      <AnemoIcon {...iconInlineProps} /> <AnemoIcon {...iconInlineProps} />\n    </span>\n  ),\n  canShow: (data: UIData) =>\n    data.get(tally.anemo).value >= 2 && data.get(teamSize).value >= 4,\n  sections: [\n    {\n      teamBuff: true,\n      fields: [\n        {\n          node: iwNodeStam,\n        },\n        {\n          node: iwNodeMove,\n        },\n        {\n          node: iwNodeCD,\n        },\n      ],\n    },\n  ],\n}\n\n// Enduring Rock\nconst condERShieldPath = ['resonance', 'EnduringRock']\nconst condERShield = condReadNode(condERShieldPath)\nconst condERHitPath = ['resonance', 'EnduringRockHit']\nconst condERHit = condReadNode(condERHitPath)\nconst erNodeshield_ = equal(\n  input.activeCharKey,\n  input.charKey,\n  greaterEq(teamSize, 4, greaterEq(tally.geo, 2, percent(0.15)))\n)\nconst erNodeDMG_ = equal(\n  input.activeCharKey,\n  input.charKey,\n  greaterEq(\n    teamSize,\n    4,\n    greaterEq(tally.geo, 2, equal(condERShield, 'on', percent(0.15)))\n  )\n)\nconst erNodeRes_ = equal(\n  input.activeCharKey,\n  input.charKey,\n  greaterEq(\n    teamSize,\n    4,\n    greaterEq(tally.geo, 2, equal(condERHit, 'on', percent(-0.2)))\n  )\n)\nconst enduringRock: IResonance = {\n  name: tr('EnduringRock.name'),\n  desc: tr('EnduringRock.desc'),\n  icon: (\n    <span>\n      <GeoIcon {...iconInlineProps} /> <GeoIcon {...iconInlineProps} />\n    </span>\n  ),\n  canShow: (data: UIData) =>\n    data.get(tally.geo).value >= 2 && data.get(teamSize).value >= 4,\n  sections: [\n    {\n      teamBuff: true,\n      text: tr('EnduringRock.desc'),\n      fields: [\n        {\n          node: erNodeshield_,\n        },\n      ],\n    },\n    {\n      teamBuff: true,\n      path: condERShieldPath,\n      value: condERShield,\n      header: {\n        title: tr('EnduringRock.name'),\n        icon: <GeoIcon />,\n      },\n      name: st('protectedByShield'),\n      states: {\n        on: {\n          fields: [\n            {\n              node: erNodeDMG_,\n            },\n          ],\n        },\n      },\n    },\n    {\n      teamBuff: true,\n      path: condERHitPath,\n      value: condERHit,\n      header: {\n        title: tr('EnduringRock.name'),\n        icon: <GeoIcon />,\n      },\n      name: trm('EnduringRock.hitCond'),\n      states: {\n        on: {\n          fields: [\n            {\n              node: erNodeRes_,\n            },\n            {\n              text: stg('duration'),\n              value: 15,\n              unit: 's',\n            },\n          ],\n        },\n      },\n    },\n  ],\n}\n\n// Sprawling Greenery\nconst condSG2elePath = ['resonance', 'SprawlingCanopy2ele']\nconst condSG2ele = condReadNode(condSG2elePath)\nconst condSG3elePath = ['resonance', 'SprawlingCanopy3ele']\nconst condSG3ele = condReadNode(condSG3elePath)\nconst sgBase_eleMas = equal(\n  input.activeCharKey,\n  input.charKey,\n  greaterEq(\n    teamSize,\n    4,\n    greaterEq(tally.dendro, 2, 50, {\n      ...KeyMap.info('eleMas'),\n      isTeamBuff: true,\n    })\n  )\n)\nconst sg2ele_eleMas = equal(\n  input.activeCharKey,\n  input.charKey,\n  greaterEq(\n    teamSize,\n    4,\n    greaterEq(\n      tally.dendro,\n      2,\n      equal(condSG2ele, 'on', 30, {\n        ...KeyMap.info('eleMas'),\n        isTeamBuff: true,\n      })\n    )\n  )\n)\nconst sg3ele_eleMas = equal(\n  input.activeCharKey,\n  input.charKey,\n  greaterEq(\n    teamSize,\n    4,\n    greaterEq(\n      tally.dendro,\n      2,\n      equal(condSG3ele, 'on', 20, {\n        ...KeyMap.info('eleMas'),\n        isTeamBuff: true,\n      })\n    )\n  )\n)\nconst sprawlingGreenery: IResonance = {\n  name: tr('SprawlingGreenery.name'),\n  desc: tr('SprawlingGreenery.desc'),\n  icon: (\n    <span>\n      <DendroIcon {...iconInlineProps} /> <DendroIcon {...iconInlineProps} />\n    </span>\n  ),\n  canShow: (data: UIData) =>\n    data.get(tally.dendro).value >= 2 && data.get(teamSize).value >= 4,\n  sections: [\n    {\n      teamBuff: true,\n      text: tr('SprawlingGreenery.desc'),\n      fields: [{ node: sgBase_eleMas }],\n    },\n    {\n      teamBuff: true,\n      path: condSG2elePath,\n      value: condSG2ele,\n      header: {\n        title: tr('SprawlingGreenery.name'),\n        icon: <DendroIcon />,\n      },\n      name: trm('SprawlingGreenery.cond2ele'),\n      states: {\n        on: {\n          fields: [\n            {\n              node: sg2ele_eleMas,\n            },\n            {\n              text: stg('duration'),\n              value: 6,\n              unit: 's',\n            },\n          ],\n        },\n      },\n    },\n    {\n      teamBuff: true,\n      path: condSG3elePath,\n      value: condSG3ele,\n      header: {\n        title: tr('SprawlingGreenery.name'),\n        icon: <DendroIcon />,\n      },\n      name: trm('SprawlingGreenery.cond3ele'),\n      states: {\n        on: {\n          fields: [\n            {\n              node: sg3ele_eleMas,\n            },\n            {\n              text: stg('duration'),\n              value: 6,\n              unit: 's',\n            },\n          ],\n        },\n      },\n    },\n  ],\n}\n\nexport const resonanceSheets: IResonance[] = [\n  protectiveCanopy,\n  ferventFlames,\n  soothingWaters,\n  shatteringIce,\n  highVoltage,\n  impetuousWinds,\n  enduringRock,\n  sprawlingGreenery,\n]\n\nexport const resonanceData = inferInfoMut({\n  teamBuff: {\n    premod: {\n      ...pcNodes,\n      atk_: ffNode,\n      hp_: swNode,\n      staminaDec_: iwNodeStam,\n      moveSPD_: iwNodeMove,\n      cdRed_: iwNodeCD,\n      shield_: erNodeshield_,\n      all_dmg_: erNodeDMG_,\n      geo_enemyRes_: erNodeRes_,\n      eleMas: infoMut(sum(sgBase_eleMas, sg2ele_eleMas, sg3ele_eleMas), {\n        pivot: true,\n      }),\n    },\n    total: {\n      // TODO: this crit rate is on-hit. Might put it in a `hit.critRate_` namespace later.\n      critRate_: siNode,\n    },\n  },\n})\n","import { allElementKeys } from '@genshin-optimizer/consts'\nimport type { SvgIconProps } from '@mui/material'\nimport { useEffect, useState } from 'react'\nimport { ElementIcon } from '../KeyMap/StatIcon'\n\nexport default function ElementCycle({\n  iconProps,\n}: {\n  iconProps: SvgIconProps\n}) {\n  const [counter, setcounter] = useState(0)\n  useEffect(() => {\n    const timer = setInterval(() => setcounter((c) => c + 1), 1000)\n    return () => clearInterval(timer)\n  }, [])\n  return (\n    <ElementIcon\n      ele={allElementKeys[counter % allElementKeys.length]}\n      iconProps={iconProps}\n    />\n  )\n}\n","import { useContext, useEffect, useState } from 'react'\nimport { DatabaseContext } from '../Database/Database'\nimport type { CharacterKey } from '@genshin-optimizer/consts'\n\nexport default function useCharMeta(key: CharacterKey) {\n  const { database } = useContext(DatabaseContext)\n  const [charMeta, setCharMetaState] = useState(() =>\n    database.charMeta.get(key)\n  )\n  useEffect(\n    () =>\n      database.charMeta.follow(key, (k, r, dbMeta) => setCharMetaState(dbMeta)),\n    [key, database]\n  )\n  useEffect(() => setCharMetaState(database.charMeta.get(key)), [database, key])\n  return charMeta\n}\n","import type { CharacterKey } from '@genshin-optimizer/consts'\nimport { useCallback, useContext } from 'react'\nimport { useMatch, useNavigate } from 'react-router-dom'\nimport { DatabaseContext } from '../Database/Database'\n\n/**\n * Basically a history hook to go to the dedicated character page. Will create the character if it doesn't exist.\n * @returns\n */\nexport default function useCharSelectionCallback() {\n  const { database } = useContext(DatabaseContext)\n  const navigate = useNavigate()\n  // Used to maintain the previous tab, if there is one\n  const {\n    params: { tab = '' },\n  } = useMatch({ path: '/characters/:charKey/:tab', end: false }) ?? {\n    params: { tab: '' },\n  }\n  const cb = useCallback(\n    (characterKey: CharacterKey) => {\n      const character = database.chars.get(characterKey)\n      let navTab = tab\n      // Create a new character + weapon, with linking if char isnt in db.\n      if (!character) {\n        database.chars.getWithInitWeapon(characterKey)\n        // If we are navigating to a new character,\n        // redirect to Overview, regardless of previous tab.\n        // Trying to enforce a certain UI flow when building new characters\n        navTab = ''\n      }\n      navigate(`/characters/${characterKey}/${navTab}`)\n    },\n    [navigate, database, tab]\n  )\n  return cb\n}\n","import type { CharacterKey } from '@genshin-optimizer/consts'\nimport { useContext, useEffect, useState } from 'react'\nimport { DatabaseContext } from '../Database/Database'\n\nexport default function useCharacter(\n  characterKey: CharacterKey | '' | undefined = ''\n) {\n  const { database } = useContext(DatabaseContext)\n  const [character, setCharacter] = useState(database.chars.get(characterKey))\n  useEffect(\n    () => setCharacter(database.chars.get(characterKey)),\n    [database, characterKey]\n  )\n  useEffect(\n    () =>\n      characterKey\n        ? database.chars.follow(\n            characterKey,\n            (k, r, v) => r === 'update' && setCharacter(v)\n          )\n        : undefined,\n    [characterKey, setCharacter, database]\n  )\n  return character\n}\n","import type { CharacterKey } from '@genshin-optimizer/consts'\nimport { useCallback, useContext } from 'react'\nimport { DatabaseContext } from '../Database/Database'\nimport type { ICachedCharacter } from '../Types/character'\nimport type { IConditionalValues } from '../Types/sheet'\n\ntype characterReducerBonusStatsAction = {\n  type: 'editStats'\n  statKey: string\n  value: any | undefined\n}\ntype characterReducerenemyOverrideAction = {\n  type: 'enemyOverride'\n  statKey: string\n  value: any | undefined\n}\ntype characterReducerResetStatsAction = {\n  type: 'resetStats'\n  statKey: string\n}\ntype characterTeamAction = {\n  type: 'team'\n  index: number\n  charKey: CharacterKey | ''\n}\ntype characterTeamConditional = {\n  type: 'teamConditional'\n  teamMateKey: CharacterKey\n  conditional: IConditionalValues\n}\nexport type characterReducerAction =\n  | characterReducerBonusStatsAction\n  | characterReducerenemyOverrideAction\n  | characterReducerResetStatsAction\n  | characterTeamAction\n  | characterTeamConditional\n  | Partial<ICachedCharacter>\n\nexport default function useCharacterReducer(characterKey: CharacterKey | '') {\n  const { database } = useContext(DatabaseContext)\n\n  return useCallback(\n    (action: characterReducerAction): void => {\n      if (!characterKey) return\n      const character = database.chars.get(characterKey)\n      if (!character) return\n      if ('type' in action)\n        switch (action.type) {\n          case 'enemyOverride': {\n            const enemyOverride = character.enemyOverride\n            const { statKey, value } = action\n            if (enemyOverride[statKey] === value) break\n            database.chars.set(characterKey, {\n              ...character,\n              enemyOverride: { ...enemyOverride, [statKey]: value },\n            })\n            break\n          }\n          case 'editStats': {\n            const { statKey, value } = action\n            const bonusStats = structuredClone(character.bonusStats)\n            if (bonusStats[statKey] === value) break\n            if (!value) delete bonusStats[statKey]\n            else bonusStats[statKey] = value\n            database.chars.set(characterKey, { ...character, bonusStats })\n            break\n          }\n          case 'resetStats': {\n            const { statKey } = action\n            const bonusStats = character.bonusStats\n            delete bonusStats[statKey]\n            database.chars.set(characterKey, { ...character, bonusStats })\n            break\n          }\n          case 'teamConditional': {\n            const { teamMateKey, conditional } = action\n            const teamConditional = structuredClone(character.teamConditional)\n            teamConditional[teamMateKey] = conditional\n            database.chars.set(characterKey, { ...character, teamConditional })\n            break\n          }\n          case 'team': {\n            const { team: team_ } = character\n            const team = [...team_] as ICachedCharacter['team']\n            const { index, charKey } = action\n            team[index] = charKey\n            // update src character\n            database.chars.set(characterKey, { ...character, team })\n          }\n        }\n      else database.chars.set(characterKey, { ...character, ...action })\n    },\n    [characterKey, database]\n  )\n}\n","import type { CharacterKey, GenderKey } from '@genshin-optimizer/consts'\nimport { useContext, useDeferredValue, useEffect, useMemo } from 'react'\nimport type { TeamData } from '../Context/DataContext'\nimport { allArtifactData } from '../Data/Artifacts'\nimport { getCharSheet } from '../Data/Characters'\nimport type CharacterSheet from '../Data/Characters/CharacterSheet'\nimport { resonanceData } from '../Data/Resonance'\nimport { getWeaponSheet } from '../Data/Weapons'\nimport WeaponSheet from '../Data/Weapons/WeaponSheet'\nimport type { ArtCharDatabase } from '../Database/Database'\nimport { DatabaseContext } from '../Database/Database'\nimport { common } from '../Formula'\nimport {\n  dataObjForArtifact,\n  dataObjForCharacter,\n  dataObjForWeapon,\n  mergeData,\n  uiDataForTeam,\n} from '../Formula/api'\nimport type { Data } from '../Formula/type'\nimport type { ICachedArtifact } from '../Types/artifact'\nimport type { ICachedCharacter } from '../Types/character'\nimport type { ICachedWeapon } from '../Types/weapon'\nimport { objectMap } from '../Util/Util'\nimport { defaultInitialWeapon } from '../Util/WeaponUtil'\nimport useDBMeta from './useDBMeta'\nimport { useForceUpdate } from '@genshin-optimizer/react-util'\n\ntype TeamDataBundle = {\n  teamData: Dict<CharacterKey, Data[]>\n  teamBundle: Dict<CharacterKey, CharBundle>\n}\n\nexport default function useTeamData(\n  characterKey: CharacterKey | '',\n  mainStatAssumptionLevel = 0,\n  overrideArt?: ICachedArtifact[] | Data,\n  overrideWeapon?: ICachedWeapon\n): TeamData | undefined {\n  const { database } = useContext(DatabaseContext)\n  const [dbDirty, setDbDirty] = useForceUpdate()\n  const dbDirtyDeferred = useDeferredValue(dbDirty)\n  const { gender } = useDBMeta()\n  const data = useMemo(\n    () =>\n      dbDirtyDeferred &&\n      getTeamDataCalc(\n        database,\n        characterKey,\n        mainStatAssumptionLevel,\n        gender,\n        overrideArt,\n        overrideWeapon\n      ),\n    [\n      dbDirtyDeferred,\n      gender,\n      characterKey,\n      database,\n      mainStatAssumptionLevel,\n      overrideArt,\n      overrideWeapon,\n    ]\n  )\n\n  useEffect(\n    () =>\n      characterKey\n        ? database.chars.follow(characterKey, setDbDirty)\n        : undefined,\n    [characterKey, setDbDirty, database]\n  )\n\n  return data\n}\n\nfunction getTeamDataCalc(\n  database: ArtCharDatabase,\n  characterKey: CharacterKey | '',\n  mainStatAssumptionLevel = 0,\n  gender: GenderKey,\n  overrideArt?: ICachedArtifact[] | Data,\n  overrideWeapon?: ICachedWeapon\n): TeamData | undefined {\n  if (!characterKey) return\n\n  // Retrive from cache\n  if (!mainStatAssumptionLevel && !overrideArt && !overrideWeapon) {\n    const cache = database._getTeamData(characterKey)\n    if (cache) return cache\n  }\n  const { teamData, teamBundle } =\n    getTeamData(\n      database,\n      characterKey,\n      mainStatAssumptionLevel,\n      overrideArt,\n      overrideWeapon\n    ) ?? {}\n  if (!teamData || !teamBundle) return\n\n  const calcData = uiDataForTeam(teamData, gender, characterKey)\n\n  const data = objectMap(calcData, (obj, ck) => {\n    const { data: _, ...rest } = teamBundle[ck]!\n    return { ...obj, ...rest }\n  })\n  if (!mainStatAssumptionLevel && !overrideArt && !overrideWeapon)\n    database.cacheTeamData(characterKey, data)\n  return data\n}\n\nexport function getTeamData(\n  database: ArtCharDatabase,\n  characterKey: CharacterKey | '',\n  mainStatAssumptionLevel = 0,\n  overrideArt?: ICachedArtifact[] | Data,\n  overrideWeapon?: ICachedWeapon\n): TeamDataBundle | undefined {\n  if (!characterKey) return\n  const character = database.chars.get(characterKey)\n  if (!character) return\n\n  const char1DataBundle = getCharDataBundle(\n    database,\n    true,\n    mainStatAssumptionLevel,\n    character,\n    overrideWeapon\n      ? overrideWeapon\n      : database.weapons.get(character.equippedWeapon) ??\n          defaultInitialWeapon(),\n    overrideArt ??\n      (Object.values(character.equippedArtifacts)\n        .map((a) => database.arts.get(a))\n        .filter((a) => a) as ICachedArtifact[])\n  )\n  if (!char1DataBundle) return\n  const teamBundle = { [characterKey]: char1DataBundle }\n  const teamData: Dict<CharacterKey, Data[]> = {\n    [characterKey]: char1DataBundle.data,\n  }\n\n  char1DataBundle.character.team.forEach((ck) => {\n    if (!ck) return\n    const tchar = database.chars.get(ck)\n    if (!tchar) return\n    const databundle = getCharDataBundle(\n      database,\n      false,\n      0,\n      { ...tchar, conditional: character.teamConditional[ck] ?? {} },\n      database.weapons.get(tchar.equippedWeapon) ?? defaultInitialWeapon(),\n      Object.values(tchar.equippedArtifacts)\n        .map((a) => database.arts.get(a))\n        .filter((a) => a) as ICachedArtifact[]\n    )\n    if (!databundle) return\n    teamBundle[ck] = databundle\n    teamData[ck] = databundle.data\n  })\n\n  return { teamData, teamBundle }\n}\ntype CharBundle = {\n  character: ICachedCharacter\n  weapon: ICachedWeapon\n  characterSheet: CharacterSheet\n  weaponSheet: WeaponSheet\n  data: Data[]\n}\n\nfunction getCharDataBundle(\n  database: ArtCharDatabase,\n  useCustom = false,\n  mainStatAssumptionLevel: number,\n  character: ICachedCharacter,\n  weapon: ICachedWeapon,\n  artifacts: ICachedArtifact[] | Data\n): CharBundle | undefined {\n  const characterSheet = getCharSheet(character.key, database.gender)\n  if (!characterSheet) return\n  const weaponSheet = getWeaponSheet(weapon.key)\n  if (!weaponSheet) return\n\n  const weaponSheetsDataOfType = WeaponSheet.getAllDataOfType(\n    characterSheet.weaponTypeKey\n  )\n\n  const weaponSheetsData = useCustom\n    ? (() => {\n        // display is included in WeaponSheet.getAllDataOfType\n        const { display, ...restWeaponSheetData } = weaponSheet.data\n        return mergeData([restWeaponSheetData, weaponSheetsDataOfType])\n      })()\n    : weaponSheet.data\n\n  const sheetData = mergeData([\n    characterSheet.data,\n    weaponSheetsData,\n    allArtifactData,\n  ])\n  const artifactData = Array.isArray(artifacts)\n    ? artifacts.map((a) => dataObjForArtifact(a, mainStatAssumptionLevel))\n    : [artifacts]\n  const data = [\n    ...artifactData,\n    dataObjForCharacter(character, useCustom ? sheetData : undefined),\n    dataObjForWeapon(weapon),\n    sheetData,\n    common, // NEED TO PUT THIS AT THE END\n    resonanceData,\n  ]\n  return { character, weapon, characterSheet, weaponSheet, data }\n}\n","import { useContext, useEffect, useState } from 'react'\nimport { DatabaseContext } from '../Database/Database'\n\nexport default function useWeapon(weaponID: string | undefined = '') {\n  const { database } = useContext(DatabaseContext)\n  const [weapon, setWeapon] = useState(database.weapons.get(weaponID))\n  useEffect(\n    () => setWeapon(database.weapons.get(weaponID)),\n    [database, weaponID]\n  )\n  useEffect(\n    () =>\n      weaponID\n        ? database.weapons.follow(\n            weaponID,\n            (k, r, v) => r === 'update' && setWeapon(v)\n          )\n        : undefined,\n    [weaponID, setWeapon, database]\n  )\n  return weapon\n}\n","import type { CharacterKey, GenderKey } from '@genshin-optimizer/consts'\nimport { characterAsset } from '@genshin-optimizer/g-assets'\nimport { portrait } from '@genshin-optimizer/silly-wisher'\n\nexport function iconAsset(\n  cKey: CharacterKey,\n  gender: GenderKey,\n  silly: boolean\n) {\n  const sillyAsset = portrait(cKey, gender)\n  const genshinAsset = characterAsset(cKey, 'icon', gender)\n  if (silly && sillyAsset) return sillyAsset\n  return genshinAsset || ''\n}\n","import { objMap } from '@genshin-optimizer/util'\ntype Entry = {\n  total: number\n  current: number\n}\ntype CatTotalKey = string | number | symbol\n// A helper function to generate multiple `current/total` formated string object with categories using a single callback\nexport function bulkCatTotal(\n  catTotals: Record<CatTotalKey, readonly CatTotalKey[]>,\n  cb: (ctMap: Record<CatTotalKey, Record<CatTotalKey, Entry>>) => void\n) {\n  const ctMap = objMap(catTotals, (keys) => catTotalObj(keys))\n  cb(ctMap)\n  return objMap(ctMap, (ct) => catTotalToStringObj(ct))\n}\n// A helper function to generate a `current/total` formated string object with categories\nexport function catTotal<T extends CatTotalKey>(\n  keys: readonly T[],\n  cb: (ct: Record<T, Entry>) => void\n) {\n  const ct = catTotalObj(keys)\n  cb(ct)\n  return catTotalToStringObj(ct)\n}\n\nfunction catTotalObj<T extends CatTotalKey>(\n  keys: readonly T[]\n): Record<T, Entry> {\n  return Object.fromEntries(\n    keys.map((k) => [k, { total: 0, current: 0 }])\n  ) as Record<T, Entry>\n}\n\nfunction catTotalToStringObj<T extends CatTotalKey>(tot: Record<T, Entry>) {\n  return objMap(tot, ({ total, current }) =>\n    current === total ? `${total}` : `${current}/${total}`\n  ) as Record<T, string>\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m12 21.35-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"\n}), 'Favorite');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z\"\n}), 'FavoriteBorder');\nexports.default = _default;","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12 1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'DeleteForever');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  fillRule: \"evenodd\",\n  d: \"M20 3H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM10 17H5v-2h5v2zm0-4H5v-2h5v2zm0-4H5V7h5v2zm4.82 6L12 12.16l1.41-1.41 1.41 1.42L17.99 9l1.42 1.42L14.82 15z\"\n}), 'FactCheck');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z\"\n}), 'FavoriteBorder');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19.8 18.4 14 10.67V6.5l1.35-1.69c.26-.33.03-.81-.39-.81H9.04c-.42 0-.65.48-.39.81L10 6.5v4.17L4.2 18.4c-.49.66-.02 1.6.8 1.6h14c.82 0 1.29-.94.8-1.6z\"\n}), 'Science');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m16 6 2.29 2.29-4.88 4.88-4-4L2 16.59 3.41 18l6-6 4 4 6.3-6.29L22 12V6z\"\n}), 'TrendingUp');"],"names":["ArtifactCardPico","artifactObj","art","slotKey","key","sx","display","flexDirection","height","width","pb","position","left","top","transform","opacity","component","src","imgAssets","mainStatKey","rarity","level","element","allElementWithPhyKeys","ele","includes","color","className","artifactAsset","setKey","maxWidth","maxHeight","fontSize","lineHeight","pointerEvents","p","Artifact","bottom","right","statKey","iconProps","ArtifactTooltip","children","fallback","variant","title","Suspense","ArtifactData","placement","disableInteractive","t","useTranslation","sheet","getArtSheet","substats","slotName","getSlotName","mainVariant","KeyMap","iconInlineProps","tk","getMainStatDisplayStr","justifyContent","alignItems","stars","py","map","stat","value","clamp","rolls","length","artDisplayValue","unit","name","location","SlotIcon","WeaponCardPico","weaponId","weapon","useWeapon","weaponSheet","getWeaponSheet","UIData","useMemo","computeUIData","data","dataObjForWeapon","tooltipAddl","Box","WeaponStatPico","node","get","input","CardDark","alignContent","WeaponNameTooltip","addlText","weaponAsset","ascension","mt","Typography","SqBadge","WeaponSheet","hasRefinement","refinement","info","icon","nodeVStr","WeaponFullCard","flexShrink","flexGrow","gutterBottom","gap","WeaponStat","CharacterCard","characterKey","artifactChildren","weaponChildren","characterChildren","onClick","onClickHeader","onClickTeammate","footer","hideStats","isTeammateCard","database","useContext","DatabaseContext","teamData","useTeamData","character","useCharacter","gender","useDBMeta","characterSheet","getCharSheet","characterDispatch","useCharacterReducer","target","onClickHandler","useCallback","actionWrapperFunc","CardActionArea","characterContextObj","dataContextObj","favorite","useCharMeta","Skeleton","CardLight","zIndex","IconButton","_","charMeta","set","Favorite","FavoriteBorder","ConditionalWrapper","condition","wrapper","ExistingCharacterCardContent","NewCharacterCardContent","CharacterContext","DataContext","Header","undefined","HeaderContent","CardContent","theme","padding","spacing","Artifacts","Grid","container","columns","item","xs","equippedWeapon","range","i","team","CharacterCardPico","simpleTooltip","index","Stats","HeaderContentNew","silly","SillyContext","banner","characterAsset","content","backgroundImage","backgroundPosition","backgroundSize","iconAsset","alignSelf","pr","characterEle","characterLevel","constellation","autoBoost","skillBoost","burstBoost","tAuto","tSkill","tBurst","Chip","label","size","textShadow","whiteSpace","ascensionMaxLevel","colored","inline","elementKey","artifacts","allArtifactSlotKeys","k","arts","id","toString","direction","Object","values","getDisplay","basic","n","JSON","stringify","onMouseDown","onMouseEnter","disableTooltip","open","setOpen","useState","onTooltipOpen","onTooltipClose","useEffect","simpleTooltipWrapperFunc","onClose","onOpen","verticalAlign","charCardTooltipWrapperFunc","enterNextDelay","enterTouchDelay","m","falseWrapper","draggable","BlankCharacterCardPico","styled","ToggleButton","shouldForwardProp","prop","baseColor","selectedColor","backgroundColor","palette","main","contrastText","dark","elementHandler","handleMultiSelect","allElementKeys","ElementToggle","totals","onChange","props","useTheme","sm","useMediaQuery","breakpoints","up","ToggleButtonGroup","exclusive","minWidth","ml","weaponTypeHandler","allWeaponTypeKeys","WeaponToggle","wt","sideMargin","weaponType","tr","strKey","Translate","ns","key18","trm","teamSize","sum","tally","pcNodes","objKeyValMap","e","equal","greaterEq","percent","protectiveCanopy","desc","counter","setcounter","timer","setInterval","c","clearInterval","canShow","sections","teamBuff","fields","ffNode","ferventFlames","text","st","swNode","soothingWaters","condSIPath","condSI","condReadNode","siNode","shatteringIce","path","header","states","on","highVoltage","iwNodeStam","iwNodeMove","iwNodeCD","impetuousWinds","condERShieldPath","condERShield","condERHitPath","condERHit","erNodeshield_","erNodeDMG_","erNodeRes_","enduringRock","stg","condSG2elePath","condSG2ele","condSG3elePath","condSG3ele","sgBase_eleMas","isTeamBuff","sg2ele_eleMas","sg3ele_eleMas","resonanceSheets","resonanceData","inferInfoMut","premod","atk_","hp_","staminaDec_","moveSPD_","cdRed_","shield_","all_dmg_","geo_enemyRes_","eleMas","infoMut","pivot","total","critRate_","setCharMetaState","follow","r","dbMeta","useCharSelectionCallback","navigate","useNavigate","params","tab","useMatch","end","chars","navTab","getWithInitWeapon","setCharacter","v","action","type","enemyOverride","bonusStats","structuredClone","teamMateKey","conditional","teamConditional","team_","charKey","mainStatAssumptionLevel","overrideArt","overrideWeapon","dbDirty","setDbDirty","useForceUpdate","dbDirtyDeferred","useDeferredValue","cache","_getTeamData","teamBundle","getTeamData","calcData","uiDataForTeam","objectMap","obj","ck","rest","cacheTeamData","getTeamDataCalc","char1DataBundle","getCharDataBundle","weapons","defaultInitialWeapon","equippedArtifacts","a","filter","forEach","tchar","databundle","useCustom","weaponSheetsDataOfType","weaponTypeKey","weaponSheetsData","restWeaponSheetData","mergeData","sheetData","allArtifactData","Array","isArray","dataObjForArtifact","dataObjForCharacter","common","weaponID","setWeapon","cKey","sillyAsset","portrait","genshinAsset","bulkCatTotal","catTotals","cb","ctMap","objMap","keys","catTotalObj","ct","catTotalToStringObj","catTotal","fromEntries","current","tot","_interopRequireDefault","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","fillRule"],"sourceRoot":""}