{"version":3,"file":"common.c4d742ff431ce5d6.js","mappings":"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","sources":["webpack:///./src/app/Components/Artifact/ArtifactSetAutocomplete.tsx","webpack:///./src/app/Components/Image/ImgFullwidth.tsx","webpack:///./src/app/Components/TextButton.tsx","webpack:///./src/app/Components/ToggleButton/RarityToggle.tsx","webpack:///./src/app/Components/Weapon/WeaponSelectionModal.tsx","webpack:///./src/app/PageCharacter/CharacterSelectionModal.tsx","webpack:///./src/app/PageWeapon/WeaponCard.tsx","webpack:///./src/app/SVGIcons/DiscordIcon.tsx","webpack:///../../node_modules/@mui/icons-material/CheckBox.js","webpack:///../../node_modules/@mui/icons-material/CheckBoxOutlineBlank.js","webpack:///../../node_modules/@mui/icons-material/esm/ChevronRight.js","webpack:///../../node_modules/@mui/icons-material/esm/InsertLink.js","webpack:///../../node_modules/@mui/icons-material/esm/Replay.js","webpack:///../../node_modules/@mui/icons-material/esm/YouTube.js","webpack:///../../node_modules/prop-types/factoryWithThrowingShims.js","webpack:///../../node_modules/prop-types/index.js","webpack:///../../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import type { ArtifactSetKey } from '@genshin-optimizer/consts'\nimport type { AutocompleteRenderGroupParams } from '@mui/material'\nimport { Box, List, ListSubheader } from '@mui/material'\nimport { useCallback, useMemo } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { setKeysByRarities } from '../../Data/Artifacts'\nimport { artifactDefIcon } from '../../Data/Artifacts/ArtifactSheet'\nimport type { ArtifactRarity } from '../../Types/consts'\nimport type { GeneralAutocompleteProps } from '../GeneralAutocomplete'\nimport { GeneralAutocomplete } from '../GeneralAutocomplete'\nimport ImgIcon from '../Image/ImgIcon'\nimport { StarsDisplay } from '../StarDisplay'\nimport sortByRarityAndName from './sortByRarityAndName'\n\nexport default function ArtifactSetAutocomplete({\n  artSetKey,\n  setArtSetKey,\n  label = '',\n  ...props\n}: {\n  artSetKey: ArtifactSetKey | ''\n  setArtSetKey: (key: ArtifactSetKey | '') => void\n} & Omit<\n  GeneralAutocompleteProps<ArtifactSetKey | ''>,\n  'options' | 'valueKey' | 'onChange' | 'toImg' | 'groupBy' | 'renderGroup'\n>) {\n  const { t } = useTranslation(['artifact', 'artifactNames_gen'])\n  label = label ? label : t('artifact:autocompleteLabels.set')\n\n  const options = useMemo(\n    () =>\n      Object.entries(setKeysByRarities)\n        .flatMap(([rarity, sets]) =>\n          sets.map((set) => ({\n            key: set,\n            label: t(`artifactNames_gen:${set}`),\n            grouper: +rarity as ArtifactRarity,\n          }))\n        )\n        .sort(sortByRarityAndName),\n    [t]\n  )\n\n  const toImg = useCallback(\n    (key: ArtifactSetKey | '') =>\n      key ? <ImgIcon src={artifactDefIcon(key)} size={2} /> : undefined,\n    []\n  )\n  const onChange = useCallback(\n    (k: ArtifactSetKey | '' | null) => setArtSetKey(k ?? ''),\n    [setArtSetKey]\n  )\n  return (\n    <GeneralAutocomplete\n      options={options}\n      valueKey={artSetKey}\n      onChange={onChange}\n      toImg={toImg}\n      label={label}\n      groupBy={(option) => option.grouper?.toString() ?? ''}\n      renderGroup={(params: AutocompleteRenderGroupParams) =>\n        params.group && (\n          <List key={params.group} component={Box}>\n            <ListSubheader key={`${params.group}Header`} sx={{ top: '-1em' }}>\n              {params.group}{' '}\n              <StarsDisplay stars={+params.group as ArtifactRarity} inline />\n            </ListSubheader>\n            {params.children}\n          </List>\n        )\n      }\n      {...props}\n    />\n  )\n}\n","import { styled } from '@mui/material'\nconst ImgFullwidth = styled('img')({\n  width: '100%',\n  height: 'auto',\n})\n\nexport default ImgFullwidth\n","import type { ButtonProps } from '@mui/material'\nimport { Button, styled } from '@mui/material'\n\nconst DisabledButton = styled(Button)(({ theme }) => ({\n  '&.Mui-disabled': {\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.text.secondary,\n  },\n}))\n\nexport default function TextButton({\n  children,\n  disabled,\n  ...props\n}: ButtonProps) {\n  return (\n    <DisabledButton {...props} disabled>\n      {children}\n    </DisabledButton>\n  )\n}\n","import type { RarityKey } from '@genshin-optimizer/consts'\nimport { allRarityKeys } from '@genshin-optimizer/consts'\nimport StarRoundedIcon from '@mui/icons-material/StarRounded'\nimport { Box, Chip, ToggleButton, useMediaQuery, useTheme } from '@mui/material'\nimport { handleMultiSelect } from '../../Util/MultiSelect'\nimport type { SolidToggleButtonGroupProps } from '../SolidToggleButtonGroup'\nimport SolidToggleButtonGroup from '../SolidToggleButtonGroup'\ntype RarityToggleProps = Omit<\n  SolidToggleButtonGroupProps,\n  'onChange' | 'value'\n> & {\n  onChange: (value: RarityKey[]) => void\n  value: RarityKey[]\n  totals: Record<RarityKey, Displayable>\n}\nconst rarityHandler = handleMultiSelect([...allRarityKeys])\nexport default function RarityToggle({\n  value,\n  totals,\n  onChange,\n  ...props\n}: RarityToggleProps) {\n  const theme = useTheme()\n  const xs = !useMediaQuery(theme.breakpoints.up('sm'))\n  return (\n    <SolidToggleButtonGroup exclusive value={value} {...props}>\n      {allRarityKeys.map((star) => (\n        <ToggleButton\n          key={star}\n          value={star}\n          sx={{\n            p: xs ? 1 : undefined,\n            minWidth: xs ? 0 : '7em',\n            display: 'flex',\n            gap: xs ? 0 : 1,\n          }}\n          onClick={() => onChange(rarityHandler(value, star))}\n        >\n          <Box display=\"flex\">\n            <strong>{star}</strong>\n            <StarRoundedIcon />\n            <Chip label={totals[star]} size=\"small\" />\n          </Box>\n        </ToggleButton>\n      ))}\n    </SolidToggleButtonGroup>\n  )\n}\n","import type { WeaponKey, WeaponTypeKey } from '@genshin-optimizer/consts'\nimport {\n  allRarityKeys,\n  allWeaponKeys,\n  allWeaponTypeKeys,\n} from '@genshin-optimizer/consts'\nimport { weaponAsset } from '@genshin-optimizer/g-assets'\nimport {\n  Box,\n  CardActionArea,\n  CardContent,\n  Divider,\n  Grid,\n  TextField,\n  Typography,\n} from '@mui/material'\nimport type { ChangeEvent } from 'react'\nimport {\n  useContext,\n  useDeferredValue,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react'\nimport { useTranslation } from 'react-i18next'\nimport Assets from '../../Assets/Assets'\nimport { getWeaponSheet } from '../../Data/Weapons'\nimport type WeaponSheet from '../../Data/Weapons/WeaponSheet'\nimport { DatabaseContext } from '../../Database/Database'\nimport { catTotal } from '../../Util/totalUtils'\nimport CardDark from '../Card/CardDark'\nimport CardLight from '../Card/CardLight'\nimport CloseButton from '../CloseButton'\nimport ImgIcon from '../Image/ImgIcon'\nimport ModalWrapper from '../ModalWrapper'\nimport { StarsDisplay } from '../StarDisplay'\nimport RarityToggle from '../ToggleButton/RarityToggle'\nimport WeaponToggle from '../ToggleButton/WeaponToggle'\n\ntype WeaponSelectionModalProps = {\n  show: boolean\n  ascension?: number\n  onHide: () => void\n  onSelect: (wKey: WeaponKey) => void\n  filter?: (sheet: WeaponSheet) => boolean\n  weaponTypeFilter?: WeaponTypeKey\n}\n\nexport default function WeaponSelectionModal({\n  show,\n  ascension = 0,\n  onHide,\n  onSelect,\n  filter = () => true,\n  weaponTypeFilter,\n}: WeaponSelectionModalProps) {\n  const { t } = useTranslation(['page_weapon', 'weaponNames_gen'])\n  const [weaponFilter, setWeaponfilter] = useState<WeaponTypeKey[]>(\n    weaponTypeFilter ? [weaponTypeFilter] : [...allWeaponTypeKeys]\n  )\n\n  const { database } = useContext(DatabaseContext)\n  const [state, setState] = useState(database.displayWeapon.get())\n  useEffect(\n    () => database.displayWeapon.follow((r, dbMeta) => setState(dbMeta)),\n    [database]\n  )\n\n  useEffect(\n    () => weaponTypeFilter && setWeaponfilter([weaponTypeFilter]),\n    [weaponTypeFilter]\n  )\n\n  const [searchTerm, setSearchTerm] = useState('')\n  const deferredSearchTerm = useDeferredValue(searchTerm)\n\n  const { rarity } = state\n  const weaponIdList = useMemo(\n    () =>\n      allWeaponKeys\n        .filter((wKey) => filter(getWeaponSheet(wKey)))\n        .filter((wKey) =>\n          weaponFilter.includes(getWeaponSheet(wKey).weaponType)\n        )\n        .filter(\n          (wKey) =>\n            !deferredSearchTerm ||\n            t(`weaponNames_gen:${wKey}`)\n              .toLowerCase()\n              .includes(deferredSearchTerm.toLowerCase())\n        )\n        .filter((wKey) => rarity.includes(getWeaponSheet(wKey).rarity))\n        .sort((a, b) => getWeaponSheet(b).rarity - getWeaponSheet(a).rarity),\n    [deferredSearchTerm, filter, rarity, t, weaponFilter]\n  )\n\n  const weaponTotals = useMemo(\n    () =>\n      catTotal(allWeaponTypeKeys, (ct) =>\n        allWeaponKeys.forEach((wk) => {\n          const wtk = getWeaponSheet(wk).weaponType\n          ct[wtk].total++\n          if (weaponIdList.includes(wk)) ct[wtk].current++\n        })\n      ),\n    [weaponIdList]\n  )\n\n  const weaponRarityTotals = useMemo(\n    () =>\n      catTotal(allRarityKeys, (ct) =>\n        allWeaponKeys.forEach((wk) => {\n          const wr = getWeaponSheet(wk).rarity\n          ct[wr].total++\n          if (weaponIdList.includes(wk)) ct[wr].current++\n        })\n      ),\n    [weaponIdList]\n  )\n\n  return (\n    <ModalWrapper open={show} onClose={onHide}>\n      <CardDark>\n        <CardContent sx={{ py: 1 }}>\n          <Grid container spacing={1}>\n            <Grid item>\n              <WeaponToggle\n                value={weaponFilter}\n                totals={weaponTotals}\n                onChange={setWeaponfilter}\n                disabled={!!weaponTypeFilter}\n                size=\"small\"\n              />\n            </Grid>\n            <Grid item>\n              <RarityToggle\n                sx={{ height: '100%' }}\n                onChange={(rarity) => database.displayWeapon.set({ rarity })}\n                value={rarity}\n                totals={weaponRarityTotals}\n                size=\"small\"\n              />\n            </Grid>\n            <Grid item flexGrow={1}>\n              <TextField\n                autoFocus\n                size=\"small\"\n                value={searchTerm}\n                onChange={(e: ChangeEvent<HTMLTextAreaElement>) =>\n                  setSearchTerm(e.target.value)\n                }\n                label={t('weaponName')}\n                sx={{ height: '100%' }}\n                InputProps={{\n                  sx: { height: '100%' },\n                }}\n              />\n            </Grid>\n            <Grid item>\n              <CloseButton onClick={onHide} />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <CardContent>\n          <Grid container spacing={1}>\n            {weaponIdList.map((weaponKey) => {\n              const weaponSheet = getWeaponSheet(weaponKey)\n              return (\n                <Grid item key={weaponKey} lg={3} md={4}>\n                  <CardLight sx={{ height: '100%' }}>\n                    <CardActionArea\n                      onClick={() => {\n                        onHide()\n                        onSelect(weaponKey)\n                      }}\n                      sx={{ display: 'flex' }}\n                    >\n                      <Box\n                        component=\"img\"\n                        src={weaponAsset(weaponKey, ascension >= 2)}\n                        sx={{ width: 100, height: 'auto' }}\n                        className={` grad-${weaponSheet.rarity}star`}\n                      />\n                      <Box sx={{ flexGrow: 1, px: 1 }}>\n                        <Typography variant=\"subtitle1\">\n                          {weaponSheet.name}\n                        </Typography>\n                        <Typography\n                          sx={{ display: 'flex', alignItems: 'baseline' }}\n                        >\n                          <ImgIcon\n                            size={1.5}\n                            src={Assets.weaponTypes?.[weaponSheet.weaponType]}\n                          />\n                          <StarsDisplay stars={weaponSheet.rarity} colored />\n                        </Typography>\n                      </Box>\n                    </CardActionArea>\n                  </CardLight>\n                </Grid>\n              )\n            })}\n          </Grid>\n        </CardContent>\n        <Divider />\n        <CardContent sx={{ py: 1 }}>\n          <CloseButton large onClick={onHide} />\n        </CardContent>\n      </CardDark>\n    </ModalWrapper>\n  )\n}\n","import type { CharacterKey } from '@genshin-optimizer/consts'\nimport {\n  allCharacterKeys,\n  allElementKeys,\n  allWeaponTypeKeys,\n} from '@genshin-optimizer/consts'\nimport { characterAsset } from '@genshin-optimizer/g-assets'\nimport { Favorite, FavoriteBorder } from '@mui/icons-material'\nimport type { TooltipProps } from '@mui/material'\nimport {\n  Box,\n  CardActionArea,\n  CardContent,\n  Divider,\n  Grid,\n  IconButton,\n  styled,\n  TextField,\n  Tooltip,\n  tooltipClasses,\n  Typography,\n} from '@mui/material'\nimport type { ChangeEvent } from 'react'\nimport {\n  useContext,\n  useDeferredValue,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react'\nimport { useTranslation } from 'react-i18next'\nimport CardDark from '../Components/Card/CardDark'\nimport CardLight from '../Components/Card/CardLight'\nimport CharacterCard from '../Components/Character/CharacterCard'\nimport CloseButton from '../Components/CloseButton'\nimport ModalWrapper from '../Components/ModalWrapper'\nimport SortByButton from '../Components/SortByButton'\nimport SqBadge from '../Components/SqBadge'\nimport { StarsDisplay } from '../Components/StarDisplay'\nimport ElementToggle from '../Components/ToggleButton/ElementToggle'\nimport WeaponToggle from '../Components/ToggleButton/WeaponToggle'\nimport { DataContext } from '../Context/DataContext'\nimport { SillyContext } from '../Context/SillyContext'\nimport { getCharSheet } from '../Data/Characters'\nimport type CharacterSheet from '../Data/Characters/CharacterSheet'\nimport { ascensionMaxLevel } from '../Data/LevelData'\nimport { DatabaseContext } from '../Database/Database'\nimport useBoolState from '../ReactHooks/useBoolState'\nimport useCharacter from '../ReactHooks/useCharacter'\nimport useCharMeta from '../ReactHooks/useCharMeta'\nimport useDBMeta from '../ReactHooks/useDBMeta'\nimport useForceUpdate from '../ReactHooks/useForceUpdate'\nimport type { ICachedCharacter } from '../Types/character'\nimport { iconAsset } from '../Util/AssetUtil'\nimport type { CharacterSortKey } from '../Util/CharacterSort'\nimport {\n  characterFilterConfigs,\n  characterSortConfigs,\n  characterSortMap,\n} from '../Util/CharacterSort'\nimport { filterFunction, sortFunction } from '../Util/SortByFilters'\nimport { catTotal } from '../Util/totalUtils'\n\ntype characterFilter = (\n  character: ICachedCharacter | undefined,\n  sheet: CharacterSheet\n) => boolean\n\ntype CharacterSelectionModalProps = {\n  show: boolean\n  newFirst?: boolean\n  onHide: () => void\n  onSelect?: (ckey: CharacterKey) => void\n  filter?: characterFilter\n}\nconst sortKeys = Object.keys(characterSortMap)\nexport default function CharacterSelectionModal({\n  show,\n  onHide,\n  onSelect,\n  filter = () => true,\n  newFirst = false,\n}: CharacterSelectionModalProps) {\n  const { t } = useTranslation([\n    'page_character',\n    // Always load these 2 so character names are loaded for searching/sorting\n    'sillyWisher_charNames',\n    'charNames_gen',\n  ])\n  const { silly } = useContext(SillyContext)\n  const { database } = useContext(DatabaseContext)\n  const [state, setState] = useState(() => database.displayCharacter.get())\n  useEffect(\n    () => database.displayCharacter.follow((r, s) => setState(s)),\n    [database, setState]\n  )\n\n  const { gender } = useDBMeta()\n\n  const [dbDirty, forceUpdate] = useForceUpdate()\n\n  // character favorite updater\n  useEffect(\n    () => database.charMeta.followAny(() => forceUpdate()),\n    [forceUpdate, database]\n  )\n\n  const [searchTerm, setSearchTerm] = useState('')\n  const deferredSearchTerm = useDeferredValue(searchTerm)\n  const deferredState = useDeferredValue(state)\n  const deferredDbDirty = useDeferredValue(dbDirty)\n  const characterKeyList = useMemo(() => {\n    const { element, weaponType, sortType, ascending } = deferredState\n    const sortByKeys = [\n      ...(newFirst ? ['new'] : []),\n      ...(characterSortMap[sortType] ?? []),\n    ] as CharacterSortKey[]\n    return (\n      deferredDbDirty &&\n      allCharacterKeys\n        .filter((key) =>\n          filter(database.chars.get(key), getCharSheet(key, gender))\n        )\n        .filter(\n          filterFunction(\n            { element, weaponType, name: deferredSearchTerm },\n            characterFilterConfigs(database, silly)\n          )\n        )\n        .sort(\n          sortFunction(\n            sortByKeys,\n            ascending,\n            characterSortConfigs(database, silly),\n            ['new', 'favorite']\n          )\n        )\n    )\n  }, [\n    deferredState,\n    newFirst,\n    deferredDbDirty,\n    deferredSearchTerm,\n    database,\n    silly,\n    filter,\n    gender,\n  ])\n\n  const weaponTotals = useMemo(\n    () =>\n      catTotal(allWeaponTypeKeys, (ct) =>\n        allCharacterKeys.forEach((ck) => {\n          const wtk = getCharSheet(ck, database.gender).weaponTypeKey\n          ct[wtk].total++\n          if (characterKeyList.includes(ck)) ct[wtk].current++\n        })\n      ),\n    [characterKeyList, database]\n  )\n\n  const elementTotals = useMemo(\n    () =>\n      catTotal(allElementKeys, (ct) =>\n        allCharacterKeys.forEach((ck) => {\n          const ele = getCharSheet(ck, database.gender).elementKey\n          ct[ele].total++\n          if (characterKeyList.includes(ck)) ct[ele].current++\n        })\n      ),\n    [characterKeyList, database]\n  )\n\n  const { weaponType, element, sortType, ascending } = state\n\n  return (\n    <ModalWrapper\n      open={show}\n      onClose={onHide}\n      sx={{ '& .MuiContainer-root': { justifyContent: 'normal' } }}\n    >\n      <CardDark>\n        <CardContent\n          sx={{\n            py: 1,\n            display: 'flex',\n            alignItems: 'center',\n            gap: 1,\n            flexWrap: 'wrap',\n          }}\n        >\n          <WeaponToggle\n            sx={{ height: '100%' }}\n            onChange={(weaponType) =>\n              database.displayCharacter.set({ weaponType })\n            }\n            value={weaponType}\n            totals={weaponTotals}\n            size=\"small\"\n          />\n          <ElementToggle\n            sx={{ height: '100%' }}\n            onChange={(element) => database.displayCharacter.set({ element })}\n            value={element}\n            totals={elementTotals}\n            size=\"small\"\n          />\n          <Box flexGrow={1}>\n            <TextField\n              autoFocus\n              value={searchTerm}\n              onChange={(e: ChangeEvent<HTMLTextAreaElement>) =>\n                setSearchTerm(e.target.value)\n              }\n              label={t('characterName')}\n              size=\"small\"\n              sx={{ height: '100%' }}\n              InputProps={{\n                sx: { height: '100%' },\n              }}\n            />\n          </Box>\n          <SortByButton\n            sx={{ height: '100%' }}\n            sortKeys={sortKeys}\n            value={sortType}\n            onChange={(sortType) => database.displayCharacter.set({ sortType })}\n            ascending={ascending}\n            onChangeAsc={(ascending) =>\n              database.displayCharacter.set({ ascending })\n            }\n          />\n          <CloseButton onClick={onHide} />\n        </CardContent>\n        <Divider />\n        <DataContext.Provider value={{ teamData: undefined } as any}>\n          <CardContent>\n            <Grid\n              container\n              spacing={1}\n              columns={{ xs: 2, sm: 3, md: 4, lg: 5 }}\n            >\n              {characterKeyList.map((characterKey) => (\n                <Grid item key={characterKey} xs={1}>\n                  <SelectionCard\n                    characterKey={characterKey}\n                    onClick={() => {\n                      onHide()\n                      onSelect?.(characterKey)\n                    }}\n                  />\n                </Grid>\n              ))}\n            </Grid>\n          </CardContent>\n        </DataContext.Provider>\n      </CardDark>\n    </ModalWrapper>\n  )\n}\n\nconst CustomTooltip = styled(({ className, ...props }: TooltipProps) => (\n  <Tooltip {...props} classes={{ popper: className }} />\n))({\n  [`& .${tooltipClasses.tooltip}`]: {\n    padding: 0,\n  },\n})\n\nfunction SelectionCard({\n  characterKey,\n  onClick,\n}: {\n  characterKey: CharacterKey\n  onClick: () => void\n}) {\n  const { gender } = useDBMeta()\n  const characterSheet = getCharSheet(characterKey, gender)\n  const character = useCharacter(characterKey)\n  const { favorite } = useCharMeta(characterKey)\n  const { database } = useContext(DatabaseContext)\n  const { silly } = useContext(SillyContext)\n\n  const [open, onOpen, onClose] = useBoolState()\n\n  const { level = 1, ascension = 0, constellation = 0 } = character ?? {}\n  return (\n    <CustomTooltip\n      enterDelay={300}\n      enterNextDelay={300}\n      arrow\n      placement=\"bottom\"\n      open={open}\n      onClose={onClose}\n      onOpen={onOpen}\n      title={\n        <Box sx={{ width: 300 }}>\n          <CharacterCard hideStats characterKey={characterKey} />\n        </Box>\n      }\n    >\n      <Box>\n        <CardLight\n          sx={{ flexGrow: 1, display: 'flex', flexDirection: 'column' }}\n        >\n          <Box sx={{ position: 'absolute', opacity: 0.7, zIndex: 2 }}>\n            <IconButton\n              sx={{ p: 0.25 }}\n              onClick={(_) => {\n                onClose()\n                database.charMeta.set(characterKey, { favorite: !favorite })\n              }}\n            >\n              {favorite ? <Favorite /> : <FavoriteBorder />}\n            </IconButton>\n          </Box>\n          <CardActionArea onClick={onClick}>\n            <Box\n              display=\"flex\"\n              position=\"relative\"\n              className={`grad-${characterSheet?.rarity}star`}\n              sx={{\n                '&::before': {\n                  content: '\"\"',\n                  display: 'block',\n                  position: 'absolute',\n                  left: 0,\n                  top: 0,\n                  width: '100%',\n                  height: '100%',\n                  opacity: 0.5,\n                  backgroundImage: `url(${characterAsset(\n                    characterKey,\n                    'banner',\n                    gender\n                  )})`,\n                  backgroundPosition: 'center',\n                  backgroundSize: 'cover',\n                },\n              }}\n              width=\"100%\"\n            >\n              <Box\n                flexShrink={1}\n                sx={{ maxWidth: { xs: '33%', lg: '30%' } }}\n                alignSelf=\"flex-end\"\n                display=\"flex\"\n                flexDirection=\"column\"\n                zIndex={1}\n              >\n                <Box\n                  component=\"img\"\n                  src={iconAsset(characterKey, gender, silly)}\n                  width=\"100%\"\n                  height=\"auto\"\n                  maxWidth={256}\n                  sx={{ mt: 'auto' }}\n                />\n              </Box>\n              <Box\n                flexGrow={1}\n                sx={{ pr: 1, pt: 1 }}\n                display=\"flex\"\n                flexDirection=\"column\"\n                zIndex={1}\n                justifyContent=\"space-evenly\"\n              >\n                <Typography variant=\"body2\" sx={{ flexGrow: 1 }}>\n                  <SqBadge\n                    color={characterSheet?.elementKey}\n                    sx={{ opacity: 0.85, textShadow: '0 0 5px gray' }}\n                  >\n                    {characterSheet?.name}\n                  </SqBadge>\n                </Typography>\n                {character ? (\n                  <Box sx={{ display: 'flex', gap: 1, alignItems: 'center' }}>\n                    <Box sx={{ textShadow: '0 0 5px gray' }}>\n                      <Typography\n                        variant=\"body2\"\n                        component=\"span\"\n                        whiteSpace=\"nowrap\"\n                      >\n                        Lv. {level}\n                      </Typography>\n                      <Typography\n                        variant=\"body2\"\n                        component=\"span\"\n                        color=\"text.secondary\"\n                      >\n                        /{ascensionMaxLevel[ascension]}\n                      </Typography>\n                    </Box>\n                    <Typography variant=\"body2\">C{constellation}</Typography>\n                  </Box>\n                ) : (\n                  <Typography component=\"span\" variant=\"body2\">\n                    <SqBadge>NEW</SqBadge>\n                  </Typography>\n                )}\n                <StarsDisplay stars={characterSheet?.rarity ?? 1} colored />\n              </Box>\n            </Box>\n          </CardActionArea>\n        </CardLight>\n      </Box>\n    </CustomTooltip>\n  )\n}\n","import { weaponAsset } from '@genshin-optimizer/g-assets'\nimport { Lock, LockOpen } from '@mui/icons-material'\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever'\nimport EditIcon from '@mui/icons-material/Edit'\nimport {\n  Box,\n  Button,\n  CardActionArea,\n  CardContent,\n  IconButton,\n  Skeleton,\n  Tooltip,\n  Typography,\n} from '@mui/material'\nimport { Suspense, useCallback, useContext, useMemo } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport Assets from '../Assets/Assets'\nimport CardLight from '../Components/Card/CardLight'\nimport { LocationAutocomplete } from '../Components/Character/LocationAutocomplete'\nimport LocationName from '../Components/Character/LocationName'\nimport ConditionalWrapper from '../Components/ConditionalWrapper'\nimport ImgIcon from '../Components/Image/ImgIcon'\nimport { StarsDisplay } from '../Components/StarDisplay'\nimport type CharacterSheet from '../Data/Characters/CharacterSheet'\nimport { ascensionMaxLevel } from '../Data/LevelData'\nimport { getWeaponSheet } from '../Data/Weapons'\nimport { DatabaseContext } from '../Database/Database'\nimport { uiInput as input } from '../Formula'\nimport { computeUIData, dataObjForWeapon } from '../Formula/api'\nimport { nodeVStr } from '../Formula/uiData'\nimport useWeapon from '../ReactHooks/useWeapon'\nimport type { LocationKey } from '../Types/consts'\n\ntype WeaponCardProps = {\n  weaponId: string\n  onClick?: (weaponId: string) => void\n  onEdit?: (weaponId: string) => void\n  onDelete?: (weaponId: string) => void\n  canEquip?: boolean\n  extraButtons?: JSX.Element\n}\nexport default function WeaponCard({\n  weaponId,\n  onClick,\n  onEdit,\n  onDelete,\n  canEquip = false,\n  extraButtons,\n}: WeaponCardProps) {\n  const { t } = useTranslation(['page_weapon', 'ui'])\n  const { database } = useContext(DatabaseContext)\n  const databaseWeapon = useWeapon(weaponId)\n  const weapon = databaseWeapon\n  const weaponSheet = weapon?.key ? getWeaponSheet(weapon.key) : undefined\n\n  const filter = useCallback(\n    (cs: CharacterSheet) => cs.weaponTypeKey === weaponSheet?.weaponType,\n    [weaponSheet]\n  )\n\n  const wrapperFunc = useCallback(\n    (children) => (\n      <CardActionArea onClick={() => onClick?.(weaponId)}>\n        {children}\n      </CardActionArea>\n    ),\n    [onClick, weaponId]\n  )\n  const falseWrapperFunc = useCallback((children) => <Box>{children}</Box>, [])\n  const setLocation = useCallback(\n    (k: LocationKey) =>\n      weaponId && database.weapons.set(weaponId, { location: k }),\n    [database, weaponId]\n  )\n\n  const UIData = useMemo(\n    () =>\n      weaponSheet &&\n      weapon &&\n      computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]),\n    [weaponSheet, weapon]\n  )\n\n  if (!weapon || !weaponSheet || !UIData) return null\n  const { level, ascension, refinement, id, location = '', lock } = weapon\n  const weaponTypeKey = UIData.get(input.weapon.type).value!\n  const stats = [input.weapon.main, input.weapon.sub, input.weapon.sub2].map(\n    (x) => UIData.get(x)\n  )\n  const img = weaponAsset(weapon.key, ascension >= 2)\n\n  return (\n    <Suspense\n      fallback={\n        <Skeleton\n          variant=\"rectangular\"\n          sx={{ width: '100%', height: '100%', minHeight: 300 }}\n        />\n      }\n    >\n      <CardLight\n        sx={{\n          height: '100%',\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'space-between',\n        }}\n      >\n        <ConditionalWrapper\n          condition={!!onClick}\n          wrapper={wrapperFunc}\n          falseWrapper={falseWrapperFunc}\n        >\n          <Box\n            className={`grad-${weaponSheet.rarity}star`}\n            sx={{ position: 'relative', pt: 2, px: 2 }}\n          >\n            {!onClick && (\n              <IconButton\n                color=\"primary\"\n                onClick={() => database.weapons.set(id, { lock: !lock })}\n                sx={{ position: 'absolute', right: 0, bottom: 0, zIndex: 2 }}\n              >\n                {lock ? <Lock /> : <LockOpen />}\n              </IconButton>\n            )}\n            <Box sx={{ position: 'relative', zIndex: 1 }}>\n              <Box\n                component=\"div\"\n                sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 1 }}\n              >\n                <ImgIcon size={2} src={Assets.weaponTypes?.[weaponTypeKey]} />\n                <Typography\n                  noWrap\n                  sx={{\n                    textAlign: 'center',\n                    backgroundColor: 'rgba(100,100,100,0.35)',\n                    borderRadius: '1em',\n                    px: 1,\n                  }}\n                >\n                  <strong>{weaponSheet.name}</strong>\n                </Typography>\n              </Box>\n              <Typography component=\"span\" variant=\"h5\">\n                Lv. {level}\n              </Typography>\n              <Typography component=\"span\" variant=\"h5\" color=\"text.secondary\">\n                /{ascensionMaxLevel[ascension]}\n              </Typography>\n              <Typography variant=\"h6\">\n                Refinement <strong>{refinement}</strong>\n              </Typography>\n              <StarsDisplay stars={weaponSheet.rarity} colored />\n            </Box>\n            <Box\n              sx={{ height: '100%', position: 'absolute', right: 0, top: 0 }}\n            >\n              <Box\n                component=\"img\"\n                src={img ?? ''}\n                width=\"auto\"\n                height=\"100%\"\n                sx={{ float: 'right' }}\n              />\n            </Box>\n          </Box>\n          <CardContent>\n            {stats.map((node) => {\n              if (!node.info.name) return null\n              return (\n                <Box key={JSON.stringify(node.info)} sx={{ display: 'flex' }}>\n                  <Typography flexGrow={1}>\n                    {node.info.icon} {node.info.name}\n                  </Typography>\n                  <Typography>{nodeVStr(node)}</Typography>\n                </Box>\n              )\n            })}\n          </CardContent>\n        </ConditionalWrapper>\n        <Box\n          sx={{\n            p: 1,\n            display: 'flex',\n            gap: 1,\n            justifyContent: 'space-between',\n            alignItems: 'center',\n          }}\n        >\n          <Box sx={{ flexGrow: 1 }}>\n            {canEquip ? (\n              <LocationAutocomplete\n                location={location}\n                setLocation={setLocation}\n                filter={filter}\n                autoCompleteProps={{ getOptionDisabled: (t) => !t.key }}\n              />\n            ) : (\n              <LocationName location={location} />\n            )}\n          </Box>\n          <Box\n            display=\"flex\"\n            gap={1}\n            alignItems=\"stretch\"\n            height=\"100%\"\n            sx={{ '& .MuiButton-root': { minWidth: 0, height: '100%' } }}\n          >\n            {!!onEdit && (\n              <Tooltip\n                title={<Typography>{t`page_weapon:edit`}</Typography>}\n                placement=\"top\"\n                arrow\n              >\n                <Button color=\"info\" size=\"small\" onClick={() => onEdit(id)}>\n                  <EditIcon />\n                </Button>\n              </Tooltip>\n            )}\n            {!!onDelete && (\n              <Button\n                color=\"error\"\n                size=\"small\"\n                onClick={() => onDelete(id)}\n                disabled={!!location || lock}\n              >\n                <DeleteForeverIcon />\n              </Button>\n            )}\n            {extraButtons}\n          </Box>\n        </Box>\n      </CardLight>\n    </Suspense>\n  )\n}\n","import { createSvgIcon } from '@mui/material'\n\nconst DiscordIcon = createSvgIcon(\n  <path d=\"M 20.332031 4.226562 C 18.777344 3.5 17.117188 2.972656 15.378906 2.671875 C 15.164062 3.058594 14.917969 3.574219 14.746094 3.988281 C 12.898438 3.710938 11.070312 3.710938 9.257812 3.988281 C 9.085938 3.574219 8.832031 3.058594 8.617188 2.671875 C 6.875 2.972656 5.214844 3.503906 3.660156 4.230469 C 0.527344 8.96875 -0.324219 13.585938 0.101562 18.136719 C 2.179688 19.6875 4.195312 20.632812 6.175781 21.25 C 6.664062 20.574219 7.097656 19.859375 7.476562 19.105469 C 6.757812 18.835938 6.074219 18.5 5.425781 18.109375 C 5.597656 17.980469 5.765625 17.847656 5.929688 17.710938 C 9.878906 19.558594 14.167969 19.558594 18.070312 17.710938 C 18.234375 17.847656 18.402344 17.980469 18.574219 18.109375 C 17.921875 18.5 17.238281 18.835938 16.519531 19.109375 C 16.898438 19.859375 17.332031 20.578125 17.820312 21.25 C 19.804688 20.632812 21.820312 19.691406 23.898438 18.136719 C 24.394531 12.859375 23.046875 8.285156 20.332031 4.226562 Z M 8.011719 15.335938 C 6.828125 15.335938 5.855469 14.230469 5.855469 12.882812 C 5.855469 11.535156 6.808594 10.425781 8.011719 10.425781 C 9.21875 10.425781 10.191406 11.53125 10.171875 12.882812 C 10.171875 14.230469 9.21875 15.335938 8.011719 15.335938 Z M 15.988281 15.335938 C 14.800781 15.335938 13.828125 14.230469 13.828125 12.882812 C 13.828125 11.535156 14.78125 10.425781 15.988281 10.425781 C 17.191406 10.425781 18.164062 11.53125 18.144531 12.882812 C 18.144531 14.230469 17.191406 15.335938 15.988281 15.335938 Z M 15.988281 15.335938 \" />,\n  'Discord'\n)\nexport default DiscordIcon\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');\nexports.default = _default;","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 6 8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'ChevronRight');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"\n}), 'InsertLink');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 5V1L7 6l5 5V7c3.31 0 6 2.69 6 6s-2.69 6-6 6-6-2.69-6-6H4c0 4.42 3.58 8 8 8s8-3.58 8-8-3.58-8-8-8z\"\n}), 'Replay');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 15l5.19-3L10 9v6m11.56-7.83c.13.47.22 1.1.28 1.9.07.8.1 1.49.1 2.09L22 12c0 2.19-.16 3.8-.44 4.83-.25.9-.83 1.48-1.73 1.73-.47.13-1.33.22-2.65.28-1.3.07-2.49.1-3.59.1L12 19c-4.19 0-6.8-.16-7.83-.44-.9-.25-1.48-.83-1.73-1.73-.13-.47-.22-1.1-.28-1.9-.07-.8-.1-1.49-.1-2.09L2 12c0-2.19.16-3.8.44-4.83.25-.9.83-1.48 1.73-1.73.47-.13 1.33-.22 2.65-.28 1.3-.07 2.49-.1 3.59-.1L12 5c4.19 0 6.8.16 7.83.44.9.25 1.48.83 1.73 1.73z\"\n}), 'YouTube');","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["ArtifactSetAutocomplete","artSetKey","setArtSetKey","label","props","t","useTranslation","options","useMemo","Object","entries","setKeysByRarities","flatMap","rarity","sets","map","set","key","grouper","sort","sortByRarityAndName","toImg","useCallback","src","artifactDefIcon","size","undefined","onChange","k","valueKey","groupBy","option","toString","renderGroup","params","group","component","Box","sx","top","stars","inline","children","styled","width","height","DisabledButton","Button","theme","backgroundColor","palette","primary","dark","color","text","secondary","TextButton","disabled","rarityHandler","handleMultiSelect","allRarityKeys","RarityToggle","value","totals","useTheme","xs","useMediaQuery","breakpoints","up","exclusive","star","p","minWidth","display","gap","onClick","WeaponSelectionModal","show","ascension","onHide","onSelect","filter","weaponTypeFilter","weaponFilter","setWeaponfilter","useState","allWeaponTypeKeys","database","useContext","DatabaseContext","state","setState","displayWeapon","get","useEffect","follow","r","dbMeta","searchTerm","setSearchTerm","deferredSearchTerm","useDeferredValue","weaponIdList","allWeaponKeys","wKey","getWeaponSheet","includes","weaponType","toLowerCase","a","b","weaponTotals","catTotal","ct","wk","wtk","total","current","weaponRarityTotals","wr","open","onClose","py","container","spacing","item","flexGrow","autoFocus","e","target","InputProps","weaponKey","weaponSheet","lg","md","weaponAsset","className","px","variant","name","alignItems","Assets","colored","large","sortKeys","keys","characterSortMap","CharacterSelectionModal","newFirst","silly","SillyContext","displayCharacter","s","gender","useDBMeta","dbDirty","forceUpdate","useForceUpdate","charMeta","followAny","deferredState","deferredDbDirty","characterKeyList","element","sortType","ascending","sortByKeys","allCharacterKeys","chars","getCharSheet","filterFunction","characterFilterConfigs","sortFunction","characterSortConfigs","ck","weaponTypeKey","elementTotals","allElementKeys","ele","elementKey","justifyContent","flexWrap","onChangeAsc","teamData","columns","sm","characterKey","SelectionCard","CustomTooltip","classes","popper","tooltipClasses","padding","characterSheet","character","useCharacter","favorite","useCharMeta","onOpen","useBoolState","level","constellation","enterDelay","enterNextDelay","arrow","placement","title","hideStats","flexDirection","position","opacity","zIndex","_","content","left","backgroundImage","characterAsset","backgroundPosition","backgroundSize","flexShrink","maxWidth","alignSelf","iconAsset","mt","pr","pt","textShadow","whiteSpace","ascensionMaxLevel","WeaponCard","weaponId","onEdit","onDelete","canEquip","extraButtons","weapon","useWeapon","cs","wrapperFunc","falseWrapperFunc","setLocation","weapons","location","UIData","computeUIData","data","dataObjForWeapon","refinement","id","lock","input","stats","x","img","Suspense","fallback","minHeight","condition","wrapper","falseWrapper","right","bottom","mb","noWrap","textAlign","borderRadius","float","node","info","icon","nodeVStr","JSON","stringify","autoCompleteProps","getOptionDisabled","createSvgIcon","d","_interopRequireDefault","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","shim","propName","componentName","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","elementType","instanceOf","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes"],"sourceRoot":""}